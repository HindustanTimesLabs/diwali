{"version":3,"sources":["webpack:///js/bundle.js","webpack:///webpack/bootstrap 5b905673282e2c7e3259","webpack:///./js/app.js","webpack:///./~/d3/build/d3.js","webpack:///./~/underscore/underscore.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","d3","_","city_average","intervals","crackerCounter","ladi","chakri","fuljhadi","pulpul","snake","anar","json","error","data","sum","obj","el","hasOwnProperty","parseFloat","cleartimer","e","setTimeout","clearInterval","effect","updateShareText","option","time_text","times","Math","round","current_exposure","pol","random","first","second","third","cracker","fourth","tweet","$","html","console","log","on","city","val","delhi_list","chain","reports","filter","station","recent","pollutants","pluck","value","length","select","transition","duration","attr","xScale","scales","name","min","max","color","windowWidth","window","width","bar","height","margin","top","bottom","left","right","scaleLinear","domain","range","xAxis","axisBottom","ticks","chart","append","style","selectAll","enter","d","i","cracker_data","burning","findWhere","this","interval","setInterval","css","back_pos","parseInt","split","minus","myint","addClass","removeClass","slick","dots","infinite","speed","arrow","slidesToShow","responsive","breakpoint","settings","slidesToScroll","forEach","each","key","global","factory","ascendingComparator","f","x","ascending","tickStep","start","stop","count","step0","abs","step1","pow","floor","LN10","e10","e5","e2","Map","map$1","object","map","set","Array","isArray","o","n","createObject","setObject","createMap","setMap","Set","add","linear","t","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","cos","halfPi","sinOut","sin","sinInOut","pi","expIn","expOut","expInOut","circleIn","sqrt","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","lexicographicOrder","a","b","computeUpperHullIndexes","points","indexes","size","cross","slice","Path","_x0","_y0","_x1","_y1","path","tree","y","isNaN","parent","xm","ym","xp","yp","j","node","_root","leaf","x0","y0","x1","y1","_x","_y","next","addAll","xz","yz","Infinity","cover","removeAll","remove","defaultX","defaultY","quadtree","nodes","Quadtree","NaN","undefined","leaf_copy","copy","Queue","Error","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","q","abort","end","apply","noabort","r","maybeNotify","queue","concurrency","arguments","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","asin","halfPi$1","intersect","x2","y2","x3","y3","x10","y10","x32","y32","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x00","y00","dx","dy","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","context","_context","Radial","curve","_curve","curveRadial","radial","radialLine","l","angle","radius","point","that","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","epsilon$1","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign","slope3","h0","h1","s0","s1","slope2","h","point$3","t0","t1","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$1","series","v","s","extend","definition","prototype","Object","create","Color","format","trim","toLowerCase","reHex3","exec","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","g","rgbConvert","rgb","opacity","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","lab2xyz","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","k","E","C","cubehelix","basis$1","v0","v1","v2","v3","linear$1","exponential$1","hue","constant$3","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","document","createElement","cssRoot","documentElement","cssView","defaultView","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","decompose","parseSvg","svgNode","createElementNS","setAttribute","baseVal","consolidate","matrix","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","push","interpolateNumber","rotate","skewX","scale","translateX","translateY","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","dispatch","Dispatch","parseTypenames","typenames","types","indexOf","type","get","set$2","callback","noop$1","concat","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","column","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_time","_next","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke$1","pokeDelay","taskTail","sleep","clearTimeout","newInterval","floori","offseti","field","date","Date","ceil","d0","d1","offset","step","test","setTime","t0$1","t1$1","every","isFinite","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute","durationWeek","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","FormatSpecifier","specifier","match","re","fill","align","symbol","comma","precision","formatTypes","identity$3","defaultLocale","locale$1","formatLocale","formatPrefix","localDate","H","M","S","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","string","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","w","day$$1","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","A","B","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","X","formatYear","Y","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","toString","utcFormat","utcParse","requote","replace","requoteRe","names","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","ordinal","index","unknown","implicit","slice$3","has","band","rescale","reverse","range$$1","paddingInner","paddingOuter","bandwidth","values","ordinalRange","rangeRound","padding","pointish","point$4","deinterpolateLinear","constant$4","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","bimap","r0","polymap","bisectRight","source","target","interpolate","clamp","continuous","piecewise","output","input","interpolate$$1","unit","invert","map$3","number$1","interpolateRound","linearish","tickFormat","nice","linear$2","identity$4","pow10","powp","base","logp","log10","log2","reflect","logs","pows","u","raise","exponent","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond$1","durationMinute$1","durationHour$1","durationDay$1","durationWeek$1","durationMonth","ramp","sequential","interpolator","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","space","local","Local","nextId","filterContextListener","listener","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","args","sourceEvent","none$2","empty","EnterNode","datum","_parent","bindIndex","update","exit","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$2","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","getAttribute","classedAdd","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise$1","nextSibling","parentNode","lower","previousSibling","insertBefore","firstChild","constantNull","dispatchEvent","params","window$$1","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","selection","root","init","schedule","__transition","state","CREATED","set$3","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tick","tween","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","start$1","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","inherit","timing","defaultTiming","scale0","scale1","center","entering","__axis","axis","orient","tickValues","tickArguments","identity$5","spacing","tickSizeInner","tickPadding","range0","range1","position","order","tickExit","tickEnter","line","text","merge","insert","epsilon$2","tickSizeOuter","slice$4","tickSize","axisTop","axisRight","axisLeft","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","depth","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r2","x21","y21","r21","r3","a2","c2","a3","c3","ab","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","ca","oa","pack","enclose","optional","required","constantZero","defaultRadius","radiusLeaf","packChildren","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","i1","sumValue","minValue","maxValue","newRatio","minRatio","i0","dice","treemapDice","treemapSlice","x$1","vx","y$1","vy","index$2","find","nodeById","nodeId","x$2","y$2","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","subject","active","identifier","defaultFilter","button","defaultContainer","defaultSubject","x$4","y$4","RedBlackTree","RedBlackNode","R","P","N","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","clipEdges","epsilon$3","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","array","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$1","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","ZoomEvent","Transform","__zoom","identity$6","nopropagation$1","defaultFilter$1","defaultExtent","SVGElement","ownerSVGElement","clientWidth","clientHeight","defaultTransform","nopropagation$2","type$1","defaultFilter$2","defaultExtent$1","svg","local$1","__brush","empty$1","brushSelection","dim","brushX","brush$1","brushY","brush","overlay","property","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","moving","noevent$2","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","w0","e0","w1","e1","signY","n0","n1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","starting","BrushEvent","constant$11","compareValue","compare","defaultSource","defaultTarget","defaultRadius$1","defaultStartAngle","defaultEndAngle","Adder","reset","add$1","adder","bv","av","acos","pi$4","asin$1","halfPi$3","haversin","sin$1","noop$2","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","sqrt$1","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$4","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cz","X2","Y2","Z2","rotationIdentity","tau$4","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","other","entry","link$1","clipExtent","visible","from","to","a1","corner","comparePoint","compareIntersection","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","graticuleX","graticuleY","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x0$1","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","PathString","_string","circle$2","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transform$2","T","Transform$1","fit","project","clip","geoStream","boundsStream$1","fitSize","fitExtent","resampleNone","resample$1","delta2","resampleLineTo","c0","c1","phi2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projection","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$7","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","sy0","r0y","sign$1","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","log$1","tan","mercatorProjection","clipAuto","tany","conicConformalRaw","pow$1","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","orthographicRaw","stereographicRaw","transverseMercatorRaw","version","hi","mid","ascendingBisect","bisectLeft","descending","number","variance","deviation","constant$1","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","mean","median","numbers","arrays","merged","pairs","permute","permutes","scan","xi","xj","shuffle","transpose","zip","prefix","constructor","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential","polyIn","custom","polyOut","polyInOut","PI","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","area","centroid","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains","inside","length$1","perimeter","pi$1","tau$1","epsilon","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","rect","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","slice$1","defer","await","results","awaitAll","constant$2","pi$2","tau$2","buffer","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","_line","areaEnd","_point","curveLinear","defined0","defined","x$$1","y$$1","area$1","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$1","pie","arcs","pa","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","draw","cross$1","tan30","tan30_2","diamond","ka","kr","kx","ky","star","square","sqrt3","triangle","wye","symbols","noop","basis","_x3","_x4","_y3","_y4","basisClosed","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$2","none","none$1","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$1","sums","descending$2","insideOut","tops","bottoms","define","darker","brighter","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","Kn","basis$2","basisClosed$1","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","defaultMimeType","createRange","createContextualFragment","xml","responseXML","dsv$1","csv$1","tsv$1","performance","requestAnimationFrame","TypeError","interval$1","total","millisecond","milliseconds","durationSecond","durationHour","durationDay","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","prefixExponent","utcYears","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","formatSpecifier","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","-","0","isoSpecifier","formatIso","parseIso","array$2","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","namespaces","xlink","xmlns","namespace","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","point$5","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$5","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","emptyOn","emptyTween","selection_interrupt","transition_tween","interpolate$1","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","selection_transition","root$1","cluster","previousNode","eachAfter","separation","nodeSize","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","links","descendants","shuffle$1","siblings","constant$6","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","tx","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$1","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","resquarify","_squarify","center$1","force","sx","sy","constant$7","jiggle","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","distance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$3","y$3","preventDefault","constant$8","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","constant$9","after","grandpa","uncle","sibling","polygons","triangles","voronoi","constant$10","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$1","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","xy","XY","nw","ne","se","sw","pi$3","halfPi$2","tau$3","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$5","constant$12","ribbon","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","temp","valueOf","epsilon2$2","streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area$2","bounds","deltaMax","centroid$1","constant$13","circle$1","lines","pointEqual","isSubject","extent$1","length$2","object$1","graticule","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","interpolate$2","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_circle","index$3","contextStream","projectionStream","sum$2","polygonContains","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","transform$1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","orthographic","stereographic","transverseMercator","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","randomUniform","randomLogNormal","randomBates","randomExponential","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","polygonArea","polygonCentroid","polygonHull","polygonLength","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","interpolateArray","interpolateDate","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","interpolateBasis","interpolateBasisClosed","dsvFormat","timeInterval","timeMillisecond","timeMilliseconds","timeSecond","timeSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcMillisecond","utcMilliseconds","utcSecond","utcSeconds","utcWeek","utcWeeks","formatDefaultLocale","isoFormat","isoParse","timeFormatLocale","timeFormatDefaultLocale","scaleBand","scalePoint","scaleIdentity","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","scaleSequential","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","dragEnable","zoomIdentity","zoomTransform","geoAlbers","geoAlbersUsa","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoDistance","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoInterpolate","geoLength","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoPath","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw","defineProperty","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","createReduce","dir","iterator","iteratee","memo","currentKey","optimizeCb","isArrayLike","createPredicateIndexFinder","predicate","getLength","createIndexFinder","predicateFind","sortedIndex","item","idx","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","isFunction","ObjProto","prop","previousUnderscore","ArrayProto","FuncProto","nativeIsArray","nativeKeys","nativeBind","nativeCreate","Ctor","_wrapped","VERSION","func","argCount","accumulator","isObject","createAssigner","keysFunc","undefinedOnly","baseCreate","MAX_ARRAY_INDEX","collect","foldl","inject","reduceRight","foldr","detect","findIndex","findKey","reject","negate","all","some","any","includes","include","fromIndex","guard","invoke","isFunc","where","attrs","computed","lastComputed","rand","shuffled","sample","sortBy","criteria","behavior","groupBy","indexBy","countBy","toArray","pass","fail","take","initial","last","rest","drop","compact","flatten","shallow","strict","startIndex","isArguments","len","without","difference","uniq","unique","isSorted","isBoolean","seen","union","argsLength","unzip","findLastIndex","low","high","lastIndexOf","executeBound","sourceFunc","boundFunc","callingContext","bound","partial","boundArgs","bindAll","memoize","hasher","address","wait","throttle","options","later","leading","remaining","trailing","debounce","immediate","timestamp","callNow","wrapper","once","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","functions","methods","extendOwn","assign","pick","oiteratee","omit","String","defaults","props","clone","tap","interceptor","isMatch","eq","aStack","bStack","className","areArrays","aCtor","bCtor","isEqual","isEmpty","isString","isElement","nodeType","Int8Array","isNumber","isNull","isUndefined","noConflict","constant","propertyOf","accum","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","escape","unescape","fallback","idCounter","uniqueId","templateSettings","evaluate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","template","oldSettings","variable","render","argument","instance","_chain","mixin","toJSON"],"mappings":"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","file":"./js/bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(2);\n\td3 = __webpack_require__(1)\n\t_ = __webpack_require__(3)\n\t\n\tvar city_average\n\t\n\t// empty array for the intervals\n\tvar intervals = []\n\t\n\t// cracker counter that maintains a total count of all our stuff\n\tvar crackerCounter = {\n\t        'ladi':0,\n\t        'chakri':0,\n\t        'fuljhadi':0,\n\t        'pulpul':0,\n\t        'snake':0,\n\t        'anar':0\n\t    }\n\t\n\td3.json(\"js/data.json\",(function(error, data ) {\n\t  console.log(data)\n\t  $('#city_selector').on('change',function(){\n\t        var city = ($('#city_selector').val())\n\t        delhi_list = _.chain(data.reports)\n\t                    .filter(function(e){return (e.station.city == city) && \n\t                      (e.recent.pollutants.pm25)\n\t                    })\n\t                    .pluck('recent')\n\t                    .pluck('pollutants')\n\t                    .pluck('pm25')\n\t                    .pluck('concentration')\n\t                    .value()\n\t\n\t        city_average = Math.round(d3.sum(delhi_list)/delhi_list.length)\n\t        $('.current-level').html(city_average + current_exposure)\n\t        d3.select('.current-level-line')\n\t                   .transition()\n\t                   .duration(1000)\n\t                    .attr('x',xScale(city_average+current_exposure))\n\t                   $('.current-level').html(city_average+Math.round(current_exposure));\n\t        d3.select('.cal-arrow-label')\n\t          .transition()\n\t          .duration(1000)\n\t          .attr('style', \"left:\"+xScale(city_average+current_exposure)+\"px;\")\n\t        updateShareText()\n\t\n\t  })\n\t  delhi_list = _.chain(data.reports)\n\t                    .filter(function(e){return (e.station.city == \"Delhi\") && \n\t                      (e.recent.pollutants.pm25)\n\t                    })\n\t                    .pluck('recent')\n\t                    .pluck('pollutants')\n\t                    .pluck('pm25')\n\t                    .pluck('concentration')\n\t                    .value()\n\t\n\t  city_average = Math.round(d3.sum(delhi_list)/delhi_list.length)\n\t  updateShareText()\n\t  var current_exposure = 0\n\t\n\t  // name our categories\n\t  var scales = [\n\t     {\n\t         'name':'good',\n\t         'min':0,\n\t         'max': 36,\n\t         'color':'#76C2AC'\n\t     },\n\t     {\n\t        'name':'moderate',\n\t        'min':36.5,\n\t        'max':66,\n\t        'color': '#FAE290'\n\t     },\n\t     {\n\t        'name':'severe',\n\t        'min':105,\n\t        'color': '#D67E7D'\n\t     }\n\t  ]\n\t\n\t  // set the width and height of the meter\n\t  var windowWidth = $(window).width()\n\t  var bar = {width: (windowWidth<850)?(windowWidth*0.9):800, height: 30, max: 400}\n\t  var margin = {top: 5, bottom: 5, left: 5, right: 10}\n\t  // code for my scale\n\t  var mobile_gap = (windowWidth<600)?60:0\n\t  var xScale = d3.scaleLinear()\n\t                 .domain([0,bar.max])\n\t                 .range([0,bar.width])\n\t\n\t  // x axis\n\t  xAxis = d3.axisBottom(xScale)\n\t           .ticks((windowWidth<850)?(5):8);\n\t\n\t  // let's create a chart\n\t  var chart = d3.select('.pollution-meter')\n\t                .append('svg')\n\t                .attr('height',bar.height*2)\n\t                .attr('width',bar.width+margin.left+margin.right)\n\t                .append('g')\n\t                .attr('class','chart')\n\t                .style('fill','#ccc')\n\t                .attr('transform','translate('+margin.left+',0)')\n\t\n\t  // append color ranges for the base\n\t  chart.selectAll('.marker')\n\t        .data(scales)\n\t        .enter()\n\t        .append('rect')\n\t        .attr('class',function(d){return 'marker '+d.name})\n\t        .attr('height',bar.height)\n\t        .style('fill',function(d){return d.color})\n\t        .attr('width',function(d,i){\n\t              if (i>0){\n\t                 if (i==(scales.length-1)){\n\t                    return xScale(bar.max - scales[i-1].max)\n\t                 } else {\n\t                     return xScale(d.max - scales[i-1].max)\n\t                 }\n\t                \n\t              } else {\n\t                 return xScale(d.max)\n\t              }\n\t           })\n\t        .attr('transform',function(d,i){\n\t              if (i>0){\n\t                  return 'translate('+xScale(scales[i-1].max)+',0)'\n\t              }\n\t           })\n\t\n\t\n\t  // line for the current meter\n\t  chart.append('rect')\n\t        .attr('class','current-level-line')\n\t        .attr('height',bar.height)\n\t        .attr('width',6)\n\t        .attr('x',xScale(city_average+current_exposure))\n\t        .attr('y',0)\n\t        .style('fill','#fff')\n\t        .style('stroke-width','1.5')\n\t        .style('stroke','#1a1a1a')\n\t\n\t\n\t  // append the axis\n\t  chart.append(\"g\")\n\t     .attr('class','axis')\n\t     .attr(\"transform\", \"translate(0,30)\")\n\t     .call(xAxis);\n\t\n\t  // append the marker\n\t  d3.select('.cal-arrow-label')\n\t    .attr('style', \"left:\"+xScale(city_average+current_exposure)+\"px;\")\n\t\n\t  // update the pm meter with the level\n\t  $('.current-level').html(city_average+current_exposure)\n\t\n\t  // our lovely crackers\n\t  var cracker_data = [\n\t      {\n\t          'cracker': 'anar',\n\t          'pol': 4860,\n\t          'effect': 3,\n\t          'burning': 0.2\n\t      },\n\t      {\n\t          'cracker':'ladi',\n\t          'pol':38540,\n\t          'effect':6,\n\t          'burning':0.8\n\t      },\n\t      {\n\t          'cracker':'snake',\n\t          'pol':38540,\n\t          'effect':6,\n\t          'burning':0.8\n\t      },\n\t      {\n\t          'cracker':'pulpul',\n\t          'pol':28950,\n\t          'effect':3,\n\t          'burning':0.5\n\t      },\n\t      {\n\t          'cracker':'fuljhadi',\n\t          'pol':10390,\n\t          'effect':2,\n\t          'burning':0.3\n\t      },\n\t      {\n\t          'cracker':'chakri',\n\t          'pol':9490,\n\t          'effect':5,\n\t          'burning':0.2\n\t      }\n\t  ]\n\t\n\t  // what happens when you click on a cracker\n\t  $('.cracker-con').on('click',function(){\n\t    \n\t    // find the cracker that you just clicked on\n\t     var obj = _.findWhere(cracker_data,{cracker: ($(this).attr('data-which'))})\n\t      \n\t     crackerCounter[obj.cracker]++;\n\t\n\t     current_exposure = current_exposure + obj.pol;\n\t      \n\t     bar.max = current_exposure+2000;\n\t     \n\t     xScale.domain([0,bar.max ])\n\t\n\t     updateShareText(obj)\n\t     d3.select('.axis')\n\t     .transition()\n\t     .duration(2000)\n\t     .call(xAxis);\n\t\n\t     d3.selectAll('.marker')\n\t        .transition()\n\t        .duration(2000)\n\t        .attr('width',function(d,i){\n\t           if (i>0){\n\t              if (i==(scales.length-1)){\n\t                 return xScale(bar.max - scales[i-1].max)\n\t              } else {\n\t                  return xScale(d.max - scales[i-1].max)\n\t              }\n\t           } else {\n\t              return xScale(d.max)\n\t           }\n\t        })\n\t        .attr('transform',function(d,i){\n\t           if (i>0){\n\t               return 'translate('+xScale(scales[i-1].max)+',0)'\n\t           }\n\t        })\n\t\n\t      intervals[sum(crackerCounter)-1]={\n\t        interval: setInterval(function(){\n\t      \n\t          current_exposure = current_exposure - ( obj.pol / ( obj.effect * 60 * (10) ) )\n\t\n\t          d3.select('.current-level-line')\n\t               .transition()\n\t                .attr('x',xScale(city_average+current_exposure))\n\t               .duration(100)\n\t        \n\t               $('.current-level').html(city_average+Math.round(current_exposure));\n\t\n\t            $('.cal-arrow-label').css('left',xScale(city_average+current_exposure))\n\t\n\t          }, 100)\n\t      }\n\t      cleartimer(intervals[sum(crackerCounter)-1].interval,obj)\n\t\n\t     d3.select('.current-level-line')\n\t        .transition()\n\t        .duration(1500)\n\t        .attr('x',xScale(city_average+current_exposure))\n\t\n\t     d3.select('.cal-arrow-label')\n\t        .transition()\n\t        .duration(1500)\n\t        .attr('style', \"left:\"+xScale(city_average+current_exposure)+\"px;\")\n\t\n\t      var back_pos = parseInt($(this).css('background-position').split(' ')[1].split('px')[0])\n\t     var cracker = $(this).attr('data-which')\n\t     var minus = parseInt($(this).attr('data-minus'))\n\t     var myint = setInterval(function(){\n\t        back_pos = back_pos-minus\n\t        if (back_pos >= -(minus*5)){\n\t           $('.cracker-con[data-which=\"'+cracker+'\"]').addClass('playing')\n\t           $('.cracker-con[data-which=\"'+cracker+'\"]').css('background-position',('0 '+back_pos+'px'))\n\t        } else {\n\t           $('.cracker-con[data-which=\"'+cracker+'\"]').removeClass('playing')\n\t           $('.cracker-con[data-which=\"'+cracker+'\"]').css('background-position',('0 0'))\n\t           clearInterval(myint)\n\t        }\n\t     },500)\n\t\n\t  })\n\t\n\t  $('.cracker-con').on('mouseover',function(e){\n\t     var minus = parseInt($(this).attr('data-minus'))\n\t     $(this).css('background-position',('0 -'+minus+'px'))\n\t  })\n\t\n\t  $('.cracker-con').on('mouseout',function(e){\n\t     $(this).css('background-position',('0 0'))\n\t  })\n\t\n\t  // functions go here\n\t\n\t  function sum(obj) {\n\t    var sum = 0;\n\t    for( var el in obj ) {\n\t      if( obj.hasOwnProperty( el ) ) {\n\t        sum += parseFloat( obj[el] );\n\t      }\n\t    }\n\t    return sum;\n\t  }\n\t\n\t  function cleartimer(e,obj){\n\t    setTimeout(function(){\n\t        clearInterval(e)\n\t    },obj.effect * 60 * 1000)\n\t  }\n\t\n\t  $('.crackers-container').slick({\n\t    dots: false,\n\t    infinite: true,\n\t    speed: 300,\n\t    arrow: true,\n\t    slidesToShow: 6,\n\t    responsive: [\n\t      {\n\t        breakpoint: 1400,\n\t        settings: {\n\t          slidesToShow: 4,\n\t          slidesToScroll: 4,\n\t          infinite: true,\n\t          dots: true\n\t        }\n\t      },\n\t      {\n\t        breakpoint: 982,\n\t        settings: {\n\t          slidesToShow: 3,\n\t          slidesToScroll: 3\n\t        }\n\t      },\n\t      {\n\t        breakpoint: 600,\n\t        settings: {\n\t          slidesToShow: 2,\n\t          slidesToScroll: 2\n\t        }\n\t      },\n\t      {\n\t        breakpoint: 550,\n\t        settings: {\n\t          slidesToShow: 1,\n\t          slidesToScroll: 1\n\t        }\n\t      }\n\t    ]\n\t  });\n\t\n\t  function updateShareText(obj){\n\t    var option\n\t\n\t    if (!obj){\n\t      if (city_average>200){\n\t        option = \"The level of pollution in your city is alarming. Do you still want to burn crackers?\"\n\t      } else if (city_average>100){\n\t        option = \"The air in your city is already polluted. Do you still want to burn crackers?\"\n\t      } else if (city_average>60){\n\t        option = \"Air quality in your city is way above what is deemed safe, even before you have burnt crackers.\"\n\t      } else {\n\t        option = \"Your city might be less polluted than others but choose wisely.\"\n\t      }\n\t    } else{\n\t      \n\t      var times = Math.round((city_average+current_exposure)/(current_exposure-obj.pol)), time_text;\n\t\n\t        if (times==1){\n\t          time_text = ['even worse','much worse'][_.random(0,1)]\n\t        } else if (times == 2){\n\t          time_text = 'twice as bad'\n\t         \n\t        } else if (times == 3){\n\t          time_text = 'thrice as bad'\n\t        } else {\n\t          time_text = times + ' times worse'\n\t        }\n\t\n\t      var first = 'You just made the air around you ' + time_text +'.'\n\t\n\t      var second = 'You are now breathing air that is ' + time_text +'.'\n\t      var third = 'That '+obj.cracker+' releases dust that is '+Math.round(obj.pol/40)+' times more than the recommended level.'\n\t      var fourth = 'A single '+obj.cracker+' makes the air around you '+Math.round(obj.pol/city_average)+' times worse.'\n\t      var tweet = fourth\n\t      if (obj.cracker==\"snake\"){\n\t        option = [\"Snake tablets are atleast 300 times worse than Delhi's average air.\",\"Snake tablets are the worst. Treat them like real snakes. Run away!\",first][_.random(0, 2)];\n\t        tweet = [\"Snake tablets are 300 times worse than Delhi's average air.\",\"Snake tablets are the worst. Treat them like real snakes. Run away!\"][_.random(0, 1)];\n\t      } else if (sum(crackerCounter)==1){\n\t        option = fourth\n\t      } else if (obj.cracker==\"anar\"){\n\t        option = [('That pretty little flowerpot spews dust that is '+Math.round(obj.pol/40)+' times more than the recommended level.'),first,second,third,fourth][_.random(0, 4)];\n\t      } else if (sum(crackerCounter)>5){\n\t        option = ['How many crackers will you burn? You have already lighted up '+ sum(crackerCounter)+\" of them.\",first,second,third,fourth][_.random(0, 4)]\n\t      } else {\n\t        option = [first,second,third][_.random(0,2)]\n\t      }\n\t    }\n\t    $('.share-text').html(option+'<a href=\"http://twitter.com/intent/tweet?url=http://www.hindustantimes.com/static/diwali-crackers-pollution&amp;text='+(tweet?tweet:'How toxic are your favorite firecrackers?')+ '&amp;via=httweets\" target=\"_blank\"><i class=\"fa fa-twitter social-button\" aria-hidden=\"true\"></i></a>')\n\t  }\n\t  $('.clean-air').on('click',function(){\n\t    var oldexposure = current_exposure\n\t    \n\t    intervals.forEach(function(e){\n\t      clearInterval(e.interval)\n\t    })\n\t\n\t    $.each(crackerCounter, function(key, value) {\n\t      crackerCounter[key]=0\n\t    });\n\t\n\t    current_exposure=0\n\t\n\t    bar.max = current_exposure+400;\n\t     \n\t     xScale.domain([0,bar.max ])\n\t\n\t     d3.select('.axis')\n\t     .transition()\n\t     .duration(2000)\n\t     .call(xAxis);\n\t\n\t     d3.selectAll('.marker')\n\t        .transition()\n\t        .duration(2000)\n\t        .attr('width',function(d,i){\n\t           if (i>0){\n\t              if (i==(scales.length-1)){\n\t                 return xScale(bar.max - scales[i-1].max)\n\t              } else {\n\t                  return xScale(d.max - scales[i-1].max)\n\t              }\n\t           } else {\n\t              return xScale(d.max)\n\t           }\n\t        })\n\t        .attr('transform',function(d,i){\n\t           if (i>0){\n\t               return 'translate('+xScale(scales[i-1].max)+',0)'\n\t           }\n\t        })\n\t\n\t    $('.current-level').html(city_average)\n\t    d3.select('.current-level-line')\n\t               .transition()\n\t               .duration(1000)\n\t               .attr('x',xScale(city_average))\n\t               $('.current-level').html(city_average);\n\t    \n\t    d3.select('.cal-arrow-label')\n\t      .transition()\n\t      .duration(1000)\n\t      .attr('style', \"left:\"+xScale(city_average)+\"px;\")\n\t      \n\t      updateShareText()\n\t      \n\t  })\n\t\n\t}))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.2.8. Copyright 2016 Mike Bostock.\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.2.8\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(array, f) {\n\t  var n = array.length,\n\t      m = 0,\n\t      a,\n\t      d,\n\t      s = 0,\n\t      i = -1,\n\t      j = 0;\n\t\n\t  if (f == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(array[i]))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(f(array[i], i, array)))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (j > 1) return s / (j - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b,\n\t      c;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  return [a, c];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var step = tickStep(start, stop, count);\n\t  return range(\n\t    Math.ceil(start / step) * step,\n\t    Math.floor(stop / step) * step + step / 2, // inclusive\n\t    step\n\t  );\n\t};\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] >= x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(array, p, f) {\n\t  if (f == null) f = number;\n\t  if (!(n = array.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n\t  if (p >= 1) return +f(array[n - 1], n - 1, array);\n\t  var n,\n\t      h = (n - 1) * p,\n\t      i = Math.floor(h),\n\t      a = +f(array[i], i, array),\n\t      b = +f(array[i + 1], i + 1, array);\n\t  return a + (b - a) * (h - i);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar mean = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1,\n\t      j = n;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n\t  }\n\t\n\t  if (j) return s / j;\n\t};\n\t\n\tvar median = function(array, f) {\n\t  var numbers = [],\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar pairs = function(array) {\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = [p, p = array[++i]];\n\t  return pairs;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(array, compare) {\n\t  if (!(n = array.length)) return;\n\t  var i = 0,\n\t      n,\n\t      j = 0,\n\t      xi,\n\t      xj = array[j];\n\t\n\t  if (!compare) compare = ascending;\n\t\n\t  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n\t  }\n\t\n\t  return s;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) return rollup != null\n\t        ? rollup(array) : (sortValues != null\n\t        ? array.sort(sortValues)\n\t        : array);\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tvar uniform = function(min, max) {\n\t  min = min == null ? 0 : +min;\n\t  max = max == null ? 1 : +max;\n\t  if (arguments.length === 1) max = min, min = 0;\n\t  else max -= min;\n\t  return function() {\n\t    return Math.random() * max + min;\n\t  };\n\t};\n\t\n\tvar normal = function(mu, sigma) {\n\t  var x, r;\n\t  mu = mu == null ? 0 : +mu;\n\t  sigma = sigma == null ? 1 : +sigma;\n\t  return function() {\n\t    var y;\n\t\n\t    // If available, use the second previously-generated uniform random.\n\t    if (x != null) y = x, x = null;\n\t\n\t    // Otherwise, generate a new x and y.\n\t    else do {\n\t      x = Math.random() * 2 - 1;\n\t      y = Math.random() * 2 - 1;\n\t      r = x * x + y * y;\n\t    } while (!r || r > 1);\n\t\n\t    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t  };\n\t};\n\t\n\tvar logNormal = function() {\n\t  var randomNormal = normal.apply(this, arguments);\n\t  return function() {\n\t    return Math.exp(randomNormal());\n\t  };\n\t};\n\t\n\tvar irwinHall = function(n) {\n\t  return function() {\n\t    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n\t    return sum;\n\t  };\n\t};\n\t\n\tvar bates = function(n) {\n\t  var randomIrwinHall = irwinHall(n);\n\t  return function() {\n\t    return randomIrwinHall() / n;\n\t  };\n\t};\n\t\n\tvar exponential = function(lambda) {\n\t  return function() {\n\t    return -Math.log(1 - Math.random()) / lambda;\n\t  };\n\t};\n\t\n\tfunction linear(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar area = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar pi$1 = Math.PI;\n\tvar tau$1 = 2 * pi$1;\n\tvar epsilon = 1e-6;\n\tvar tauEpsilon = tau$1 - epsilon;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = [];\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._.push(\"Z\");\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._.push(\n\t        \"M\", this._x1 = x1, \",\", this._y1 = y1\n\t      );\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n\t      this._.push(\n\t        \"L\", this._x1 = x1, \",\", this._y1 = y1\n\t      );\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon) {\n\t        this._.push(\n\t          \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n\t        );\n\t      }\n\t\n\t      this._.push(\n\t        \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n\t      );\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._.push(\n\t        \"M\", x0, \",\", y0\n\t      );\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n\t      this._.push(\n\t        \"L\", x0, \",\", y0\n\t      );\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._.push(\n\t        \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n\t        \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n\t      );\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      if (da < 0) da = da % tau$1 + tau$1;\n\t      this._.push(\n\t        \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n\t      );\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n\t  },\n\t  toString: function() {\n\t    return this._.join(\"\");\n\t  }\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tvar slice$1 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  if (!(size >= 1)) throw new Error;\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    if (this._error != null) return this;\n\t    var t = slice$1.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke(q) {\n\t  if (!q._start) {\n\t    try { start(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  return new Queue(arguments.length ? +concurrency : Infinity);\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar epsilon$1 = 1e-12;\n\tvar pi$2 = Math.PI;\n\tvar halfPi$1 = pi$2 / 2;\n\tvar tau$2 = 2 * pi$2;\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction asin(x) {\n\t  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$2(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$1,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$1,\n\t        da = Math.abs(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$2 - epsilon$1) {\n\t      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$1) {\n\t        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n\t          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$1) {\n\t        var p0 = asin(rp / r0 * Math.sin(ap)),\n\t            p1 = asin(rp / r1 * Math.sin(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * Math.cos(a01),\n\t          y01 = r1 * Math.sin(a01),\n\t          x10 = r0 * Math.cos(a10),\n\t          y10 = r0 * Math.sin(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$1) {\n\t        var x11 = r1 * Math.cos(a11),\n\t            y11 = r1 * Math.sin(a11),\n\t            x00 = r0 * Math.cos(a00),\n\t            y00 = r0 * Math.sin(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$2) {\n\t          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n\t              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$1) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$1) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n\t    return [Math.cos(a) * r, Math.sin(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x,\n\t      y$$1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$1 = function() {\n\t  var x0 = x,\n\t      x1 = null,\n\t      y0 = constant$2(0),\n\t      y1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$1 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$1,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$2(0),\n\t      endAngle = constant$2(tau$2),\n\t      padAngle = constant$2(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction radialLine(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar radialLine$1 = function() {\n\t  return radialLine(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar radialArea = function() {\n\t  var a = area$1().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar circle = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$2);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$2);\n\t  }\n\t};\n\t\n\tvar cross$1 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\n\tvar kx = Math.sin(tau$2 / 10) * kr;\n\tvar ky = -Math.cos(tau$2 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$2 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle,\n\t  cross$1,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$2(circle),\n\t      size = constant$2(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop = function() {};\n\t\n\tfunction point(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = (function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t})(0.85);\n\t\n\tfunction point$1(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$1(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction point$2(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$1) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$1) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$3(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar none = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (var j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$1 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$2([]),\n\t      order = none$1,\n\t      offset = none,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none(series, order);\n\t};\n\t\n\tvar ascending$1 = function(series) {\n\t  var sums = series.map(sum$1);\n\t  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$1(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$1(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$1),\n\t      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$1(series).reverse();\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n\tvar reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\tvar reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\tvar reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\tvar reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\tvar reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis$1(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$2 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed$1 = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear$1(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential$1(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = (function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = color$$1(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t})(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$2);\n\tvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar interpolateNumber = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolate(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: interpolateNumber(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolate = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? interpolateNumber\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : isNaN(b) ? object\n\t      : interpolateNumber)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar noop$1 = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set$2(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n\t      delimiterCode = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var EOL = {}, // sentinel value for end-of-line\n\t        EOF = {}, // sentinel value for end-of-file\n\t        rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // the current line number\n\t        t, // the current token\n\t        eol; // is the current token followed by EOL?\n\t\n\t    function token() {\n\t      if (I >= N) return EOF; // special case: end of file\n\t      if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t      // special case: quotes\n\t      var j = I, c;\n\t      if (text.charCodeAt(j) === 34) {\n\t        var i = j;\n\t        while (i++ < N) {\n\t          if (text.charCodeAt(i) === 34) {\n\t            if (text.charCodeAt(i + 1) !== 34) break;\n\t            ++i;\n\t          }\n\t        }\n\t        I = i + 2;\n\t        c = text.charCodeAt(i + 1);\n\t        if (c === 13) {\n\t          eol = true;\n\t          if (text.charCodeAt(i + 2) === 10) ++I;\n\t        } else if (c === 10) {\n\t          eol = true;\n\t        }\n\t        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // common case: find next delimiter or newline\n\t      while (I < N) {\n\t        var k = 1;\n\t        c = text.charCodeAt(I++);\n\t        if (c === 10) eol = true; // \\n\n\t        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t        else if (c !== delimiterCode) continue;\n\t        return text.slice(j, I - k);\n\t      }\n\t\n\t      // special case: last token before EOF\n\t      return text.slice(j);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var a = [];\n\t      while (t !== EOL && t !== EOF) {\n\t        a.push(t);\n\t        t = token();\n\t      }\n\t      if (f && (a = f(a, n++)) == null) continue;\n\t      rows.push(a);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke$1() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow;\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, delay);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) interval = setInterval(poke$1, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond = 1e3;\n\tvar durationMinute = 6e4;\n\tvar durationHour = 36e5;\n\tvar durationDay = 864e5;\n\tvar durationWeek = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n\t  if (offset < 0) offset += durationHour;\n\t  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tvar formatSpecifier = function(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t};\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tfunction identity$3(x) {\n\t  return x;\n\t}\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal;\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Convert negative to positive, and compute the prefix.\n\t        // Note that -0 is not less than 0, but 1 / -0 is!\n\t        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\t\n\t        // Perform the initial formatting.\n\t        value = formatType(value, precision);\n\t\n\t        // If the original value was negative, it may be rounded to zero during\n\t        // formatting; treat this as (positive) zero.\n\t        if (valueNegative) {\n\t          i = -1, n = value.length;\n\t          valueNegative = false;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), (48 < c && c < 58)\n\t                || (type === \"x\" && 96 < c && c < 103)\n\t                || (type === \"X\" && 64 < c && c < 71)) {\n\t              valueNegative = true;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": return valuePrefix + value + valueSuffix + padding;\n\t        case \"=\": return valuePrefix + padding + value + valueSuffix;\n\t        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n\t      }\n\t      return padding + valuePrefix + value + valueSuffix;\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.format = locale$1.format;\n\t  exports.formatPrefix = locale$1.formatPrefix;\n\t  return locale$1;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$2;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$2 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$2.format;\n\t  exports.timeParse = locale$2.parse;\n\t  exports.utcFormat = locale$2.utcFormat;\n\t  exports.utcParse = locale$2.utcParse;\n\t  return locale$2;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$3 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$3.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = range(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$4() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$1 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = interpolate,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    var d = domain(),\n\t        i = d.length - 1,\n\t        n = count == null ? 10 : count,\n\t        start = d[0],\n\t        stop = d[i],\n\t        step = tickStep(start, stop, n);\n\t\n\t    if (step) {\n\t      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n\t      d[0] = Math.floor(start / step) * step;\n\t      d[i] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$4() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$4().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction reinterpolate(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log() {\n\t  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n\t        ? function(x) { return (raise(x, exponent) - a) / b; }\n\t        : constant$4(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise(b, exponent) - (a = raise(a, exponent));\n\t    return function(t) { return raise(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt() {\n\t  return pow().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar durationSecond$1 = 1000;\n\tvar durationMinute$1 = durationSecond$1 * 60;\n\tvar durationHour$1 = durationMinute$1 * 60;\n\tvar durationDay$1 = durationHour$1 * 24;\n\tvar durationWeek$1 = durationDay$1 * 7;\n\tvar durationMonth = durationDay$1 * 30;\n\tvar durationYear = durationDay$1 * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$2(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond$1],\n\t    [second$$1,  5,  5 * durationSecond$1],\n\t    [second$$1, 15, 15 * durationSecond$1],\n\t    [second$$1, 30, 30 * durationSecond$1],\n\t    [minute$$1,  1,      durationMinute$1],\n\t    [minute$$1,  5,  5 * durationMinute$1],\n\t    [minute$$1, 15, 15 * durationMinute$1],\n\t    [minute$$1, 30, 30 * durationMinute$1],\n\t    [  hour$$1,  1,      durationHour$1  ],\n\t    [  hour$$1,  3,  3 * durationHour$1  ],\n\t    [  hour$$1,  6,  6 * durationHour$1  ],\n\t    [  hour$$1, 12, 12 * durationHour$1  ],\n\t    [   day$$1,  1,      durationDay$1   ],\n\t    [   day$$1,  2,  2 * durationDay$1   ],\n\t    [  week,  1,      durationWeek$1  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point$5 = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point$5(node, event);\n\t};\n\t\n\tfunction none$2() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none$2 : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$5(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$2;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$2(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar window = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  var node;\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : window(node = this.node())\n\t          .getComputedStyle(node, null)\n\t          .getPropertyValue(name);\n\t};\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise$1() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise$1);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window$$1 = window(node),\n\t      event = window$$1.CustomEvent;\n\t\n\t  if (event) {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window$$1.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point$5(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point$5(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$3(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule.state > STARTING && schedule.state < ENDING;\n\t    schedule.state = ENDED;\n\t    schedule.timer.stop();\n\t    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule = set$3(this, id);\n\t    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? interpolateNumber\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$3(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$3(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$3(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition) {\n\t  if (transition._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start$1(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start$1(name) ? init : set$3;\n\t  return function() {\n\t    var schedule = sit(this, id),\n\t        on = schedule.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar slice$4 = Array.prototype.slice;\n\t\n\tvar identity$5 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon$2 = 1e-6;\n\t\n\tfunction translateX(scale0, scale1, d) {\n\t  var x = scale0(d);\n\t  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n\t}\n\t\n\tfunction translateY(scale0, scale1, d) {\n\t  var y = scale0(d);\n\t  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = scale.bandwidth() / 2;\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        transform = orient === top || orient === bottom ? translateX : translateY,\n\t        range = scale.range(),\n\t        range0 = range[0] + 0.5,\n\t        range1 = range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\"),\n\t        k = orient === top || orient === left ? -1 : 1,\n\t        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner)\n\t        .attr(y + \"1\", 0.5)\n\t        .attr(y + \"2\", 0.5));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(y, 0.5)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$4.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tfunction Node$2(value) {\n\t  this._ = value;\n\t  this.next = null;\n\t}\n\t\n\tvar shuffle$1 = function(array) {\n\t  var i,\n\t      n = (array = array.slice()).length,\n\t      head = null,\n\t      node = head;\n\t\n\t  while (n) {\n\t    var next = new Node$2(array[n - 1]);\n\t    if (node) node = node.next = next;\n\t    else node = head = next;\n\t    array[i] = array[--n];\n\t  }\n\t\n\t  return {\n\t    head: head,\n\t    tail: node\n\t  };\n\t};\n\t\n\tvar enclose = function(circles) {\n\t  return encloseN(shuffle$1(circles), []);\n\t};\n\t\n\tfunction encloses(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r - b.r;\n\t  return dr * dr + 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\t// Returns the smallest circle that contains circles L and intersects circles B.\n\tfunction encloseN(L, B) {\n\t  var circle,\n\t      l0 = null,\n\t      l1 = L.head,\n\t      l2,\n\t      p1;\n\t\n\t  switch (B.length) {\n\t    case 1: circle = enclose1(B[0]); break;\n\t    case 2: circle = enclose2(B[0], B[1]); break;\n\t    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n\t  }\n\t\n\t  while (l1) {\n\t    p1 = l1._, l2 = l1.next;\n\t    if (!circle || !encloses(circle, p1)) {\n\t\n\t      // Temporarily truncate L before l1.\n\t      if (l0) L.tail = l0, l0.next = null;\n\t      else L.head = L.tail = null;\n\t\n\t      B.push(p1);\n\t      circle = encloseN(L, B); // Note: reorders L!\n\t      B.pop();\n\t\n\t      // Move l1 to the front of L and reconnect the truncated list L.\n\t      if (L.head) l1.next = L.head, L.head = l1;\n\t      else l1.next = null, L.head = L.tail = l1;\n\t      l0 = L.tail, l0.next = l2;\n\t\n\t    } else {\n\t      l0 = l1;\n\t    }\n\t    l1 = l2;\n\t  }\n\t\n\t  L.tail = l0;\n\t  return circle;\n\t}\n\t\n\tfunction enclose1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction enclose2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction enclose3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = 2 * (x1 - x2),\n\t      b2 = 2 * (y1 - y2),\n\t      c2 = 2 * (r2 - r1),\n\t      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      a3 = 2 * (x1 - x3),\n\t      b3 = 2 * (y1 - y3),\n\t      c3 = 2 * (r3 - r1),\n\t      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / ab - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / ab - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (xa * xb + ya * yb + r1),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n\t  return {\n\t    x: xa + xb * r + x1,\n\t    y: ya + yb * r + y1,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction distance2(circle, x, y) {\n\t  var dx = circle.x - x,\n\t      dy = circle.y - y;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the weighted centroid.\n\t  var aa = a.r * a.r,\n\t      ba = b.r * b.r,\n\t      ca = c.r * c.r,\n\t      oa = aa + ba + ca,\n\t      ox = aa * a.x + ba * b.x + ca * c.x,\n\t      oy = aa * a.y + ba * b.y + ca * c.y,\n\t      cx, cy, i, j, k, sj, sk;\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // If there are only three elements in the front-chain…\n\t    if ((k = a.previous) === (j = b.next)) {\n\t      // If the new circle intersects the third circle,\n\t      // rotate the front chain to try the next position.\n\t      if (intersects(j._, c._)) {\n\t        a = b, b = j, --i;\n\t        continue pack;\n\t      }\n\t    }\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    else {\n\t      sj = j._.r, sk = k._.r;\n\t      do {\n\t        if (sj <= sk) {\n\t          if (intersects(j._, c._)) {\n\t            b = j, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          j = j.next, sj += j._.r;\n\t        } else {\n\t          if (intersects(k._, c._)) {\n\t            a = k, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          k = k.previous, sk += k._.r;\n\t        }\n\t      } while (j !== k.next);\n\t    }\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Update the weighted centroid.\n\t    oa += ca = c._.r * c._.r;\n\t    ox += ca * c._.x;\n\t    oy += ca * c._.y;\n\t\n\t    // Compute the new closest circle a to centroid.\n\t    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = distance2(c._, cx, cy)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t    minValue = maxValue = sumValue = nodes[i0].value;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (i1 = i0 + 1; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = (function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t})(phi);\n\t\n\tvar index$1 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((y1 - y0) > (x1 - x0)) {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    } else {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = (function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t})(phi);\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[i], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > i) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index$2(d, i) {\n\t  return i;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index$2,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$7(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < n; ++i) {\n\t      count[i] = 0;\n\t    }\n\t\n\t    for (i = 0; i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      ++count[link.source.index], ++count[link.target.index];\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$2(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$2(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$7(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, x$$1, y$$1, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = q.value)) {\n\t          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x$$1 / strength;\n\t      quad.y = y$$1 / strength;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x$$1 = quad.x - node.x,\n\t        y$$1 = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x$$1 * x$$1 + y$$1 * y$$1;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x$$1 * quad.value * alpha / l;\n\t        node.vy += y$$1 * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x$$1 * w;\n\t      node.vy += y$$1 * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$3 = function(x) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$3 = function(y) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection$$1.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousemoving,\n\t      touchending;\n\t\n\t  function drag(selection$$1) {\n\t    selection$$1\n\t        .on(\"mousedown.drag\", mousedowned)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    mousemoving = true;\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches$$1 = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$1) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$3\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$3\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$3) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$3) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$3) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$3) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$3 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      var site = cell.site,\n\t          halfedges = cell.halfedges,\n\t          j = -1,\n\t          m = halfedges.length,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$10 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$6 = new Transform(1, 0, 0);\n\t\n\ttransform.prototype = Transform.prototype;\n\t\n\tfunction transform(node) {\n\t  return node.__zoom || identity$6;\n\t}\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$6;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$1,\n\t      extent = defaultExtent,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150;\n\t\n\t  function zoom(selection$$1) {\n\t    selection$$1\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .property(\"__zoom\", defaultTransform);\n\t  }\n\t\n\t  zoom.transform = function(collection, transform) {\n\t    var selection$$1 = collection.selection ? collection.selection() : collection;\n\t    selection$$1.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection$$1) {\n\t      schedule(collection, transform);\n\t    } else {\n\t      selection$$1.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection$$1, k) {\n\t    zoom.scaleTo(selection$$1, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection$$1, k) {\n\t    zoom.transform(selection$$1, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection$$1, x, y) {\n\t    zoom.transform(selection$$1, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  function scale(transform, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n\t  }\n\t\n\t  function translate(transform, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n\t    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n\t  }\n\t\n\t  function constrain(transform, extent) {\n\t    var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n\t        dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n\t    return dx || dy ? transform.translate(dx, dy) : transform;\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition$$1, transform, center) {\n\t    transition$$1\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n\t              i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n\t      this.that.__zoom = transform;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$1();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this);\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$1();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$1();\n\t      g.moved = true;\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$1();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$1();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p;\n\t\n\t    nopropagation$1();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n\t    }\n\t    if (exports.event.touches.length === n) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p, l;\n\t\n\t    noevent$1();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t;\n\t\n\t    nopropagation$1();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (!g.touch0) g.end();\n\t  }\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type$1),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type$1),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type$1(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local$1(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty$1(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent$1,\n\t      filter = defaultFilter$2,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type$1(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local$1(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type$1(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection$$1) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n\t                i = interpolate(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection$$1 = local$1(this).selection;\n\t\n\t    if (selection$$1) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection$$1[0][0])\n\t          .attr(\"y\", selection$$1[0][1])\n\t          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n\t          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local$1(that),\n\t        extent = state.extent,\n\t        selection$$1 = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection$$1 = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection$$1[0][0];\n\t      n0 = selection$$1[0][1];\n\t      e0 = selection$$1[1][0];\n\t      s0 = selection$$1[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$2();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$2();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n\t      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\t\n\t      if (selection$$1[0][0] !== w1\n\t          || selection$$1[0][1] !== n1\n\t          || selection$$1[1][0] !== e1\n\t          || selection$$1[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$2();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n\t      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar tau$3 = pi$3 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = range(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(range(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$3 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$3 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$5 = Array.prototype.slice;\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius$1(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius$1,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$5.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$2,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$2,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$2,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar quarterPi = pi$4 / 4;\n\tvar tau$4 = pi$4 * 2;\n\t\n\tvar degrees$1 = 180 / pi$4;\n\tvar radians = pi$4 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log$1 = Math.log;\n\tvar pow$1 = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt$1 = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$2() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(feature, stream) {\n\t    streamGeometry(feature.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$2;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$4);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area$2 = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range$1;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$4) phi1 = 90;\n\t    else if (deltaSum < -epsilon$4) phi0 = -90;\n\t    range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    boundsPoint(lambda, phi);\n\t  }\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range$1 = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$2,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n\t      u = x0 * x + y0 * y + z0 * z,\n\t      v = m && -acos(u) / m, // area weight\n\t      w = atan2(m, u); // line weight\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid$1 = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$2) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$2) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n\t};\n\t\n\tvar constant$13 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$4;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n\t}\n\t\n\tvar circle$1 = function() {\n\t  var center = constant$13([0, 0]),\n\t      radius = constant$13(90),\n\t      precision = constant$13(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$2,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipExtent(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$2,\n\t  point: noop$2,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$2;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$2 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$2(object$1);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tvar graticule = function() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n\t        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n\t      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n\t};\n\t\n\tvar interpolate$2 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$7 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt$1(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$2\n\t};\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _circle: circle$2(4.5),\n\t  pointRadius: function(_) {\n\t    return this._circle = circle$2(_), this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$2(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$3 = function() {\n\t  var pointRadius = 4.5,\n\t      projection,\n\t      projectionStream,\n\t      context,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = (context = _) == null ? new PathString : new PathContext(_);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(null).context(null);\n\t};\n\t\n\tvar sum$2 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$2.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$4,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(rotate, sink) {\n\t    var line = clipLine(sink),\n\t        rotatedStart = rotate.invert(start[0], start[1]),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, rotatedStart);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      line.point(point[0], point[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      var point = rotate(lambda, phi);\n\t      ringSink.point(point[0], point[1]);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$4, -halfPi$3]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$4\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$3;\n\t    stream.point(-pi$4, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$4, phi);\n\t    stream.point(pi$4, 0);\n\t    stream.point(pi$4, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$4, -phi);\n\t    stream.point(-pi$4, 0);\n\t    stream.point(-pi$4, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$4) {\n\t    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius, delta) {\n\t  var cr = cos$1(radius),\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$4;\n\t            point1[1] += epsilon$4;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt$1(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$4) < epsilon$4,\n\t        meridian = polar || delta < epsilon$4;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$4 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n\t};\n\t\n\tvar transform$1 = function(prototype) {\n\t  return {\n\t    stream: transform$2(prototype)\n\t  };\n\t};\n\t\n\tfunction transform$2(prototype) {\n\t  function T() {}\n\t  var p = T.prototype = Object.create(Transform$1.prototype);\n\t  for (var k in prototype) p[k] = prototype[k];\n\t  return function(stream) {\n\t    var t = new T;\n\t    t.stream = stream;\n\t    return t;\n\t  };\n\t}\n\t\n\tfunction Transform$1() {}\n\t\n\tTransform$1.prototype = {\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fit(project, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = project.clipExtent && project.clipExtent();\n\t\n\t  project\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) project.clipExtent(null);\n\t\n\t  geoStream(object, project.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) project.clipExtent(clip);\n\t\n\t  return project\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(project) {\n\t  return function(size, object) {\n\t    return fit(project, [[0, 0], size], object);\n\t  };\n\t}\n\t\n\tfunction fitExtent(project) {\n\t  return function(extent, object) {\n\t    return fit(project, extent, object);\n\t  };\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transform$2({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt$1(a * a + b * b + c * c),\n\t          phi2 = asin$1(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transform$2({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n\t  };\n\t\n\t  projection.fitExtent = fitExtent(projection);\n\t\n\t  projection.fitSize = fitSize(projection);\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$4 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin$1(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = fitExtent(albersUsa);\n\t\n\t  albersUsa.fitSize = fitSize(albersUsa);\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt$1(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin$1(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt$1(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin$1(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$3];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$4);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      clipAuto;\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    if (!arguments.length) return clipAuto ? null : clipExtent();\n\t    if (clipAuto = _ == null) {\n\t      var k = pi$4 * scale(),\n\t          t = translate();\n\t      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n\t    }\n\t    clipExtent(_);\n\t    return m;\n\t  };\n\t\n\t  return m.clipExtent(null);\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$3 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n\t      f = cy0 * pow$1(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n\t    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n\t    var r = f / pow$1(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$4) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin$1);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$4);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$3];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.entries = entries;\n\texports.keys = keys;\n\texports.values = values;\n\texports.map = map$1;\n\texports.set = set;\n\texports.nest = nest;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential;\n\texports.easeLinear = linear;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.polygonArea = area;\n\texports.polygonCentroid = centroid;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains;\n\texports.polygonLength = length$1;\n\texports.path = path;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.arc = arc;\n\texports.area = area$1;\n\texports.line = line;\n\texports.pie = pie;\n\texports.radialArea = radialArea;\n\texports.radialLine = radialLine$1;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle;\n\texports.symbolCross = cross$1;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetNone = none;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$1;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$1;\n\texports.stackOrderReverse = reverse;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.interpolate = interpolate;\n\texports.interpolateArray = array$1;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = interpolateNumber;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.interpolateBasis = basis$2;\n\texports.interpolateBasisClosed = basisClosed$1;\n\texports.quantize = quantize;\n\texports.dispatch = dispatch;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.formatLocale = formatLocale;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$4;\n\texports.scaleIdentity = identity$4;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow;\n\texports.scaleSqrt = sqrt;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.scaleSequential = sequential;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.creator = creator;\n\texports.customEvent = customEvent;\n\texports.local = local;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = window;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.transition = transition;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$1;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$3;\n\texports.forceY = y$3;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomIdentity = identity$6;\n\texports.zoomTransform = transform;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoArea = area$2;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid$1;\n\texports.geoCircle = circle$1;\n\texports.geoClipExtent = extent$1;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoDistance = distance;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoGraticule = graticule;\n\texports.geoInterpolate = interpolate$2;\n\texports.geoLength = length$2;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoPath = index$3;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoRotation = rotation;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform$1;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.8.3\n\t//     http://underscorejs.org\n\t//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t//     Underscore may be freely distributed under the MIT license.\n\t\n\t(function() {\n\t\n\t  // Baseline setup\n\t  // --------------\n\t\n\t  // Establish the root object, `window` in the browser, or `exports` on the server.\n\t  var root = this;\n\t\n\t  // Save the previous value of the `_` variable.\n\t  var previousUnderscore = root._;\n\t\n\t  // Save bytes in the minified (but not gzipped) version:\n\t  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\t\n\t  // Create quick reference variables for speed access to core prototypes.\n\t  var\n\t    push             = ArrayProto.push,\n\t    slice            = ArrayProto.slice,\n\t    toString         = ObjProto.toString,\n\t    hasOwnProperty   = ObjProto.hasOwnProperty;\n\t\n\t  // All **ECMAScript 5** native function implementations that we hope to use\n\t  // are declared here.\n\t  var\n\t    nativeIsArray      = Array.isArray,\n\t    nativeKeys         = Object.keys,\n\t    nativeBind         = FuncProto.bind,\n\t    nativeCreate       = Object.create;\n\t\n\t  // Naked function reference for surrogate-prototype-swapping.\n\t  var Ctor = function(){};\n\t\n\t  // Create a safe reference to the Underscore object for use below.\n\t  var _ = function(obj) {\n\t    if (obj instanceof _) return obj;\n\t    if (!(this instanceof _)) return new _(obj);\n\t    this._wrapped = obj;\n\t  };\n\t\n\t  // Export the Underscore object for **Node.js**, with\n\t  // backwards-compatibility for the old `require()` API. If we're in\n\t  // the browser, add `_` as a global object.\n\t  if (true) {\n\t    if (typeof module !== 'undefined' && module.exports) {\n\t      exports = module.exports = _;\n\t    }\n\t    exports._ = _;\n\t  } else {\n\t    root._ = _;\n\t  }\n\t\n\t  // Current version.\n\t  _.VERSION = '1.8.3';\n\t\n\t  // Internal function that returns an efficient (for current engines) version\n\t  // of the passed-in callback, to be repeatedly applied in other Underscore\n\t  // functions.\n\t  var optimizeCb = function(func, context, argCount) {\n\t    if (context === void 0) return func;\n\t    switch (argCount == null ? 3 : argCount) {\n\t      case 1: return function(value) {\n\t        return func.call(context, value);\n\t      };\n\t      case 2: return function(value, other) {\n\t        return func.call(context, value, other);\n\t      };\n\t      case 3: return function(value, index, collection) {\n\t        return func.call(context, value, index, collection);\n\t      };\n\t      case 4: return function(accumulator, value, index, collection) {\n\t        return func.call(context, accumulator, value, index, collection);\n\t      };\n\t    }\n\t    return function() {\n\t      return func.apply(context, arguments);\n\t    };\n\t  };\n\t\n\t  // A mostly-internal function to generate callbacks that can be applied\n\t  // to each element in a collection, returning the desired result — either\n\t  // identity, an arbitrary callback, a property matcher, or a property accessor.\n\t  var cb = function(value, context, argCount) {\n\t    if (value == null) return _.identity;\n\t    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n\t    if (_.isObject(value)) return _.matcher(value);\n\t    return _.property(value);\n\t  };\n\t  _.iteratee = function(value, context) {\n\t    return cb(value, context, Infinity);\n\t  };\n\t\n\t  // An internal function for creating assigner functions.\n\t  var createAssigner = function(keysFunc, undefinedOnly) {\n\t    return function(obj) {\n\t      var length = arguments.length;\n\t      if (length < 2 || obj == null) return obj;\n\t      for (var index = 1; index < length; index++) {\n\t        var source = arguments[index],\n\t            keys = keysFunc(source),\n\t            l = keys.length;\n\t        for (var i = 0; i < l; i++) {\n\t          var key = keys[i];\n\t          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n\t        }\n\t      }\n\t      return obj;\n\t    };\n\t  };\n\t\n\t  // An internal function for creating a new object that inherits from another.\n\t  var baseCreate = function(prototype) {\n\t    if (!_.isObject(prototype)) return {};\n\t    if (nativeCreate) return nativeCreate(prototype);\n\t    Ctor.prototype = prototype;\n\t    var result = new Ctor;\n\t    Ctor.prototype = null;\n\t    return result;\n\t  };\n\t\n\t  var property = function(key) {\n\t    return function(obj) {\n\t      return obj == null ? void 0 : obj[key];\n\t    };\n\t  };\n\t\n\t  // Helper for collection methods to determine whether a collection\n\t  // should be iterated as an array or as an object\n\t  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n\t  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n\t  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n\t  var getLength = property('length');\n\t  var isArrayLike = function(collection) {\n\t    var length = getLength(collection);\n\t    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n\t  };\n\t\n\t  // Collection Functions\n\t  // --------------------\n\t\n\t  // The cornerstone, an `each` implementation, aka `forEach`.\n\t  // Handles raw objects in addition to array-likes. Treats all\n\t  // sparse array-likes as if they were dense.\n\t  _.each = _.forEach = function(obj, iteratee, context) {\n\t    iteratee = optimizeCb(iteratee, context);\n\t    var i, length;\n\t    if (isArrayLike(obj)) {\n\t      for (i = 0, length = obj.length; i < length; i++) {\n\t        iteratee(obj[i], i, obj);\n\t      }\n\t    } else {\n\t      var keys = _.keys(obj);\n\t      for (i = 0, length = keys.length; i < length; i++) {\n\t        iteratee(obj[keys[i]], keys[i], obj);\n\t      }\n\t    }\n\t    return obj;\n\t  };\n\t\n\t  // Return the results of applying the iteratee to each element.\n\t  _.map = _.collect = function(obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context);\n\t    var keys = !isArrayLike(obj) && _.keys(obj),\n\t        length = (keys || obj).length,\n\t        results = Array(length);\n\t    for (var index = 0; index < length; index++) {\n\t      var currentKey = keys ? keys[index] : index;\n\t      results[index] = iteratee(obj[currentKey], currentKey, obj);\n\t    }\n\t    return results;\n\t  };\n\t\n\t  // Create a reducing function iterating left or right.\n\t  function createReduce(dir) {\n\t    // Optimized iterator function as using arguments.length\n\t    // in the main function will deoptimize the, see #1991.\n\t    function iterator(obj, iteratee, memo, keys, index, length) {\n\t      for (; index >= 0 && index < length; index += dir) {\n\t        var currentKey = keys ? keys[index] : index;\n\t        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n\t      }\n\t      return memo;\n\t    }\n\t\n\t    return function(obj, iteratee, memo, context) {\n\t      iteratee = optimizeCb(iteratee, context, 4);\n\t      var keys = !isArrayLike(obj) && _.keys(obj),\n\t          length = (keys || obj).length,\n\t          index = dir > 0 ? 0 : length - 1;\n\t      // Determine the initial value if none is provided.\n\t      if (arguments.length < 3) {\n\t        memo = obj[keys ? keys[index] : index];\n\t        index += dir;\n\t      }\n\t      return iterator(obj, iteratee, memo, keys, index, length);\n\t    };\n\t  }\n\t\n\t  // **Reduce** builds up a single result from a list of values, aka `inject`,\n\t  // or `foldl`.\n\t  _.reduce = _.foldl = _.inject = createReduce(1);\n\t\n\t  // The right-associative version of reduce, also known as `foldr`.\n\t  _.reduceRight = _.foldr = createReduce(-1);\n\t\n\t  // Return the first value which passes a truth test. Aliased as `detect`.\n\t  _.find = _.detect = function(obj, predicate, context) {\n\t    var key;\n\t    if (isArrayLike(obj)) {\n\t      key = _.findIndex(obj, predicate, context);\n\t    } else {\n\t      key = _.findKey(obj, predicate, context);\n\t    }\n\t    if (key !== void 0 && key !== -1) return obj[key];\n\t  };\n\t\n\t  // Return all the elements that pass a truth test.\n\t  // Aliased as `select`.\n\t  _.filter = _.select = function(obj, predicate, context) {\n\t    var results = [];\n\t    predicate = cb(predicate, context);\n\t    _.each(obj, function(value, index, list) {\n\t      if (predicate(value, index, list)) results.push(value);\n\t    });\n\t    return results;\n\t  };\n\t\n\t  // Return all the elements for which a truth test fails.\n\t  _.reject = function(obj, predicate, context) {\n\t    return _.filter(obj, _.negate(cb(predicate)), context);\n\t  };\n\t\n\t  // Determine whether all of the elements match a truth test.\n\t  // Aliased as `all`.\n\t  _.every = _.all = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var keys = !isArrayLike(obj) && _.keys(obj),\n\t        length = (keys || obj).length;\n\t    for (var index = 0; index < length; index++) {\n\t      var currentKey = keys ? keys[index] : index;\n\t      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n\t    }\n\t    return true;\n\t  };\n\t\n\t  // Determine if at least one element in the object matches a truth test.\n\t  // Aliased as `any`.\n\t  _.some = _.any = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var keys = !isArrayLike(obj) && _.keys(obj),\n\t        length = (keys || obj).length;\n\t    for (var index = 0; index < length; index++) {\n\t      var currentKey = keys ? keys[index] : index;\n\t      if (predicate(obj[currentKey], currentKey, obj)) return true;\n\t    }\n\t    return false;\n\t  };\n\t\n\t  // Determine if the array or object contains a given item (using `===`).\n\t  // Aliased as `includes` and `include`.\n\t  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n\t    if (!isArrayLike(obj)) obj = _.values(obj);\n\t    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n\t    return _.indexOf(obj, item, fromIndex) >= 0;\n\t  };\n\t\n\t  // Invoke a method (with arguments) on every item in a collection.\n\t  _.invoke = function(obj, method) {\n\t    var args = slice.call(arguments, 2);\n\t    var isFunc = _.isFunction(method);\n\t    return _.map(obj, function(value) {\n\t      var func = isFunc ? method : value[method];\n\t      return func == null ? func : func.apply(value, args);\n\t    });\n\t  };\n\t\n\t  // Convenience version of a common use case of `map`: fetching a property.\n\t  _.pluck = function(obj, key) {\n\t    return _.map(obj, _.property(key));\n\t  };\n\t\n\t  // Convenience version of a common use case of `filter`: selecting only objects\n\t  // containing specific `key:value` pairs.\n\t  _.where = function(obj, attrs) {\n\t    return _.filter(obj, _.matcher(attrs));\n\t  };\n\t\n\t  // Convenience version of a common use case of `find`: getting the first object\n\t  // containing specific `key:value` pairs.\n\t  _.findWhere = function(obj, attrs) {\n\t    return _.find(obj, _.matcher(attrs));\n\t  };\n\t\n\t  // Return the maximum element (or element-based computation).\n\t  _.max = function(obj, iteratee, context) {\n\t    var result = -Infinity, lastComputed = -Infinity,\n\t        value, computed;\n\t    if (iteratee == null && obj != null) {\n\t      obj = isArrayLike(obj) ? obj : _.values(obj);\n\t      for (var i = 0, length = obj.length; i < length; i++) {\n\t        value = obj[i];\n\t        if (value > result) {\n\t          result = value;\n\t        }\n\t      }\n\t    } else {\n\t      iteratee = cb(iteratee, context);\n\t      _.each(obj, function(value, index, list) {\n\t        computed = iteratee(value, index, list);\n\t        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n\t          result = value;\n\t          lastComputed = computed;\n\t        }\n\t      });\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Return the minimum element (or element-based computation).\n\t  _.min = function(obj, iteratee, context) {\n\t    var result = Infinity, lastComputed = Infinity,\n\t        value, computed;\n\t    if (iteratee == null && obj != null) {\n\t      obj = isArrayLike(obj) ? obj : _.values(obj);\n\t      for (var i = 0, length = obj.length; i < length; i++) {\n\t        value = obj[i];\n\t        if (value < result) {\n\t          result = value;\n\t        }\n\t      }\n\t    } else {\n\t      iteratee = cb(iteratee, context);\n\t      _.each(obj, function(value, index, list) {\n\t        computed = iteratee(value, index, list);\n\t        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n\t          result = value;\n\t          lastComputed = computed;\n\t        }\n\t      });\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Shuffle a collection, using the modern version of the\n\t  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n\t  _.shuffle = function(obj) {\n\t    var set = isArrayLike(obj) ? obj : _.values(obj);\n\t    var length = set.length;\n\t    var shuffled = Array(length);\n\t    for (var index = 0, rand; index < length; index++) {\n\t      rand = _.random(0, index);\n\t      if (rand !== index) shuffled[index] = shuffled[rand];\n\t      shuffled[rand] = set[index];\n\t    }\n\t    return shuffled;\n\t  };\n\t\n\t  // Sample **n** random values from a collection.\n\t  // If **n** is not specified, returns a single random element.\n\t  // The internal `guard` argument allows it to work with `map`.\n\t  _.sample = function(obj, n, guard) {\n\t    if (n == null || guard) {\n\t      if (!isArrayLike(obj)) obj = _.values(obj);\n\t      return obj[_.random(obj.length - 1)];\n\t    }\n\t    return _.shuffle(obj).slice(0, Math.max(0, n));\n\t  };\n\t\n\t  // Sort the object's values by a criterion produced by an iteratee.\n\t  _.sortBy = function(obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context);\n\t    return _.pluck(_.map(obj, function(value, index, list) {\n\t      return {\n\t        value: value,\n\t        index: index,\n\t        criteria: iteratee(value, index, list)\n\t      };\n\t    }).sort(function(left, right) {\n\t      var a = left.criteria;\n\t      var b = right.criteria;\n\t      if (a !== b) {\n\t        if (a > b || a === void 0) return 1;\n\t        if (a < b || b === void 0) return -1;\n\t      }\n\t      return left.index - right.index;\n\t    }), 'value');\n\t  };\n\t\n\t  // An internal function used for aggregate \"group by\" operations.\n\t  var group = function(behavior) {\n\t    return function(obj, iteratee, context) {\n\t      var result = {};\n\t      iteratee = cb(iteratee, context);\n\t      _.each(obj, function(value, index) {\n\t        var key = iteratee(value, index, obj);\n\t        behavior(result, value, key);\n\t      });\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Groups the object's values by a criterion. Pass either a string attribute\n\t  // to group by, or a function that returns the criterion.\n\t  _.groupBy = group(function(result, value, key) {\n\t    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n\t  });\n\t\n\t  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n\t  // when you know that your index values will be unique.\n\t  _.indexBy = group(function(result, value, key) {\n\t    result[key] = value;\n\t  });\n\t\n\t  // Counts instances of an object that group by a certain criterion. Pass\n\t  // either a string attribute to count by, or a function that returns the\n\t  // criterion.\n\t  _.countBy = group(function(result, value, key) {\n\t    if (_.has(result, key)) result[key]++; else result[key] = 1;\n\t  });\n\t\n\t  // Safely create a real, live array from anything iterable.\n\t  _.toArray = function(obj) {\n\t    if (!obj) return [];\n\t    if (_.isArray(obj)) return slice.call(obj);\n\t    if (isArrayLike(obj)) return _.map(obj, _.identity);\n\t    return _.values(obj);\n\t  };\n\t\n\t  // Return the number of elements in an object.\n\t  _.size = function(obj) {\n\t    if (obj == null) return 0;\n\t    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n\t  };\n\t\n\t  // Split a collection into two arrays: one whose elements all satisfy the given\n\t  // predicate, and one whose elements all do not satisfy the predicate.\n\t  _.partition = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var pass = [], fail = [];\n\t    _.each(obj, function(value, key, obj) {\n\t      (predicate(value, key, obj) ? pass : fail).push(value);\n\t    });\n\t    return [pass, fail];\n\t  };\n\t\n\t  // Array Functions\n\t  // ---------------\n\t\n\t  // Get the first element of an array. Passing **n** will return the first N\n\t  // values in the array. Aliased as `head` and `take`. The **guard** check\n\t  // allows it to work with `_.map`.\n\t  _.first = _.head = _.take = function(array, n, guard) {\n\t    if (array == null) return void 0;\n\t    if (n == null || guard) return array[0];\n\t    return _.initial(array, array.length - n);\n\t  };\n\t\n\t  // Returns everything but the last entry of the array. Especially useful on\n\t  // the arguments object. Passing **n** will return all the values in\n\t  // the array, excluding the last N.\n\t  _.initial = function(array, n, guard) {\n\t    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n\t  };\n\t\n\t  // Get the last element of an array. Passing **n** will return the last N\n\t  // values in the array.\n\t  _.last = function(array, n, guard) {\n\t    if (array == null) return void 0;\n\t    if (n == null || guard) return array[array.length - 1];\n\t    return _.rest(array, Math.max(0, array.length - n));\n\t  };\n\t\n\t  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n\t  // Especially useful on the arguments object. Passing an **n** will return\n\t  // the rest N values in the array.\n\t  _.rest = _.tail = _.drop = function(array, n, guard) {\n\t    return slice.call(array, n == null || guard ? 1 : n);\n\t  };\n\t\n\t  // Trim out all falsy values from an array.\n\t  _.compact = function(array) {\n\t    return _.filter(array, _.identity);\n\t  };\n\t\n\t  // Internal implementation of a recursive `flatten` function.\n\t  var flatten = function(input, shallow, strict, startIndex) {\n\t    var output = [], idx = 0;\n\t    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n\t      var value = input[i];\n\t      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n\t        //flatten current level of array or arguments object\n\t        if (!shallow) value = flatten(value, shallow, strict);\n\t        var j = 0, len = value.length;\n\t        output.length += len;\n\t        while (j < len) {\n\t          output[idx++] = value[j++];\n\t        }\n\t      } else if (!strict) {\n\t        output[idx++] = value;\n\t      }\n\t    }\n\t    return output;\n\t  };\n\t\n\t  // Flatten out an array, either recursively (by default), or just one level.\n\t  _.flatten = function(array, shallow) {\n\t    return flatten(array, shallow, false);\n\t  };\n\t\n\t  // Return a version of the array that does not contain the specified value(s).\n\t  _.without = function(array) {\n\t    return _.difference(array, slice.call(arguments, 1));\n\t  };\n\t\n\t  // Produce a duplicate-free version of the array. If the array has already\n\t  // been sorted, you have the option of using a faster algorithm.\n\t  // Aliased as `unique`.\n\t  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n\t    if (!_.isBoolean(isSorted)) {\n\t      context = iteratee;\n\t      iteratee = isSorted;\n\t      isSorted = false;\n\t    }\n\t    if (iteratee != null) iteratee = cb(iteratee, context);\n\t    var result = [];\n\t    var seen = [];\n\t    for (var i = 0, length = getLength(array); i < length; i++) {\n\t      var value = array[i],\n\t          computed = iteratee ? iteratee(value, i, array) : value;\n\t      if (isSorted) {\n\t        if (!i || seen !== computed) result.push(value);\n\t        seen = computed;\n\t      } else if (iteratee) {\n\t        if (!_.contains(seen, computed)) {\n\t          seen.push(computed);\n\t          result.push(value);\n\t        }\n\t      } else if (!_.contains(result, value)) {\n\t        result.push(value);\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Produce an array that contains the union: each distinct element from all of\n\t  // the passed-in arrays.\n\t  _.union = function() {\n\t    return _.uniq(flatten(arguments, true, true));\n\t  };\n\t\n\t  // Produce an array that contains every item shared between all the\n\t  // passed-in arrays.\n\t  _.intersection = function(array) {\n\t    var result = [];\n\t    var argsLength = arguments.length;\n\t    for (var i = 0, length = getLength(array); i < length; i++) {\n\t      var item = array[i];\n\t      if (_.contains(result, item)) continue;\n\t      for (var j = 1; j < argsLength; j++) {\n\t        if (!_.contains(arguments[j], item)) break;\n\t      }\n\t      if (j === argsLength) result.push(item);\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Take the difference between one array and a number of other arrays.\n\t  // Only the elements present in just the first array will remain.\n\t  _.difference = function(array) {\n\t    var rest = flatten(arguments, true, true, 1);\n\t    return _.filter(array, function(value){\n\t      return !_.contains(rest, value);\n\t    });\n\t  };\n\t\n\t  // Zip together multiple lists into a single array -- elements that share\n\t  // an index go together.\n\t  _.zip = function() {\n\t    return _.unzip(arguments);\n\t  };\n\t\n\t  // Complement of _.zip. Unzip accepts an array of arrays and groups\n\t  // each array's elements on shared indices\n\t  _.unzip = function(array) {\n\t    var length = array && _.max(array, getLength).length || 0;\n\t    var result = Array(length);\n\t\n\t    for (var index = 0; index < length; index++) {\n\t      result[index] = _.pluck(array, index);\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Converts lists into objects. Pass either a single array of `[key, value]`\n\t  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n\t  // the corresponding values.\n\t  _.object = function(list, values) {\n\t    var result = {};\n\t    for (var i = 0, length = getLength(list); i < length; i++) {\n\t      if (values) {\n\t        result[list[i]] = values[i];\n\t      } else {\n\t        result[list[i][0]] = list[i][1];\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Generator function to create the findIndex and findLastIndex functions\n\t  function createPredicateIndexFinder(dir) {\n\t    return function(array, predicate, context) {\n\t      predicate = cb(predicate, context);\n\t      var length = getLength(array);\n\t      var index = dir > 0 ? 0 : length - 1;\n\t      for (; index >= 0 && index < length; index += dir) {\n\t        if (predicate(array[index], index, array)) return index;\n\t      }\n\t      return -1;\n\t    };\n\t  }\n\t\n\t  // Returns the first index on an array-like that passes a predicate test\n\t  _.findIndex = createPredicateIndexFinder(1);\n\t  _.findLastIndex = createPredicateIndexFinder(-1);\n\t\n\t  // Use a comparator function to figure out the smallest index at which\n\t  // an object should be inserted so as to maintain order. Uses binary search.\n\t  _.sortedIndex = function(array, obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context, 1);\n\t    var value = iteratee(obj);\n\t    var low = 0, high = getLength(array);\n\t    while (low < high) {\n\t      var mid = Math.floor((low + high) / 2);\n\t      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n\t    }\n\t    return low;\n\t  };\n\t\n\t  // Generator function to create the indexOf and lastIndexOf functions\n\t  function createIndexFinder(dir, predicateFind, sortedIndex) {\n\t    return function(array, item, idx) {\n\t      var i = 0, length = getLength(array);\n\t      if (typeof idx == 'number') {\n\t        if (dir > 0) {\n\t            i = idx >= 0 ? idx : Math.max(idx + length, i);\n\t        } else {\n\t            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n\t        }\n\t      } else if (sortedIndex && idx && length) {\n\t        idx = sortedIndex(array, item);\n\t        return array[idx] === item ? idx : -1;\n\t      }\n\t      if (item !== item) {\n\t        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n\t        return idx >= 0 ? idx + i : -1;\n\t      }\n\t      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n\t        if (array[idx] === item) return idx;\n\t      }\n\t      return -1;\n\t    };\n\t  }\n\t\n\t  // Return the position of the first occurrence of an item in an array,\n\t  // or -1 if the item is not included in the array.\n\t  // If the array is large and already in sort order, pass `true`\n\t  // for **isSorted** to use binary search.\n\t  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n\t  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\t\n\t  // Generate an integer Array containing an arithmetic progression. A port of\n\t  // the native Python `range()` function. See\n\t  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n\t  _.range = function(start, stop, step) {\n\t    if (stop == null) {\n\t      stop = start || 0;\n\t      start = 0;\n\t    }\n\t    step = step || 1;\n\t\n\t    var length = Math.max(Math.ceil((stop - start) / step), 0);\n\t    var range = Array(length);\n\t\n\t    for (var idx = 0; idx < length; idx++, start += step) {\n\t      range[idx] = start;\n\t    }\n\t\n\t    return range;\n\t  };\n\t\n\t  // Function (ahem) Functions\n\t  // ------------------\n\t\n\t  // Determines whether to execute a function as a constructor\n\t  // or a normal function with the provided arguments\n\t  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n\t    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n\t    var self = baseCreate(sourceFunc.prototype);\n\t    var result = sourceFunc.apply(self, args);\n\t    if (_.isObject(result)) return result;\n\t    return self;\n\t  };\n\t\n\t  // Create a function bound to a given object (assigning `this`, and arguments,\n\t  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n\t  // available.\n\t  _.bind = function(func, context) {\n\t    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n\t    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n\t    var args = slice.call(arguments, 2);\n\t    var bound = function() {\n\t      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n\t    };\n\t    return bound;\n\t  };\n\t\n\t  // Partially apply a function by creating a version that has had some of its\n\t  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n\t  // as a placeholder, allowing any combination of arguments to be pre-filled.\n\t  _.partial = function(func) {\n\t    var boundArgs = slice.call(arguments, 1);\n\t    var bound = function() {\n\t      var position = 0, length = boundArgs.length;\n\t      var args = Array(length);\n\t      for (var i = 0; i < length; i++) {\n\t        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n\t      }\n\t      while (position < arguments.length) args.push(arguments[position++]);\n\t      return executeBound(func, bound, this, this, args);\n\t    };\n\t    return bound;\n\t  };\n\t\n\t  // Bind a number of an object's methods to that object. Remaining arguments\n\t  // are the method names to be bound. Useful for ensuring that all callbacks\n\t  // defined on an object belong to it.\n\t  _.bindAll = function(obj) {\n\t    var i, length = arguments.length, key;\n\t    if (length <= 1) throw new Error('bindAll must be passed function names');\n\t    for (i = 1; i < length; i++) {\n\t      key = arguments[i];\n\t      obj[key] = _.bind(obj[key], obj);\n\t    }\n\t    return obj;\n\t  };\n\t\n\t  // Memoize an expensive function by storing its results.\n\t  _.memoize = function(func, hasher) {\n\t    var memoize = function(key) {\n\t      var cache = memoize.cache;\n\t      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n\t      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n\t      return cache[address];\n\t    };\n\t    memoize.cache = {};\n\t    return memoize;\n\t  };\n\t\n\t  // Delays a function for the given number of milliseconds, and then calls\n\t  // it with the arguments supplied.\n\t  _.delay = function(func, wait) {\n\t    var args = slice.call(arguments, 2);\n\t    return setTimeout(function(){\n\t      return func.apply(null, args);\n\t    }, wait);\n\t  };\n\t\n\t  // Defers a function, scheduling it to run after the current call stack has\n\t  // cleared.\n\t  _.defer = _.partial(_.delay, _, 1);\n\t\n\t  // Returns a function, that, when invoked, will only be triggered at most once\n\t  // during a given window of time. Normally, the throttled function will run\n\t  // as much as it can, without ever going more than once per `wait` duration;\n\t  // but if you'd like to disable the execution on the leading edge, pass\n\t  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n\t  _.throttle = function(func, wait, options) {\n\t    var context, args, result;\n\t    var timeout = null;\n\t    var previous = 0;\n\t    if (!options) options = {};\n\t    var later = function() {\n\t      previous = options.leading === false ? 0 : _.now();\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    };\n\t    return function() {\n\t      var now = _.now();\n\t      if (!previous && options.leading === false) previous = now;\n\t      var remaining = wait - (now - previous);\n\t      context = this;\n\t      args = arguments;\n\t      if (remaining <= 0 || remaining > wait) {\n\t        if (timeout) {\n\t          clearTimeout(timeout);\n\t          timeout = null;\n\t        }\n\t        previous = now;\n\t        result = func.apply(context, args);\n\t        if (!timeout) context = args = null;\n\t      } else if (!timeout && options.trailing !== false) {\n\t        timeout = setTimeout(later, remaining);\n\t      }\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Returns a function, that, as long as it continues to be invoked, will not\n\t  // be triggered. The function will be called after it stops being called for\n\t  // N milliseconds. If `immediate` is passed, trigger the function on the\n\t  // leading edge, instead of the trailing.\n\t  _.debounce = function(func, wait, immediate) {\n\t    var timeout, args, context, timestamp, result;\n\t\n\t    var later = function() {\n\t      var last = _.now() - timestamp;\n\t\n\t      if (last < wait && last >= 0) {\n\t        timeout = setTimeout(later, wait - last);\n\t      } else {\n\t        timeout = null;\n\t        if (!immediate) {\n\t          result = func.apply(context, args);\n\t          if (!timeout) context = args = null;\n\t        }\n\t      }\n\t    };\n\t\n\t    return function() {\n\t      context = this;\n\t      args = arguments;\n\t      timestamp = _.now();\n\t      var callNow = immediate && !timeout;\n\t      if (!timeout) timeout = setTimeout(later, wait);\n\t      if (callNow) {\n\t        result = func.apply(context, args);\n\t        context = args = null;\n\t      }\n\t\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Returns the first function passed as an argument to the second,\n\t  // allowing you to adjust arguments, run code before and after, and\n\t  // conditionally execute the original function.\n\t  _.wrap = function(func, wrapper) {\n\t    return _.partial(wrapper, func);\n\t  };\n\t\n\t  // Returns a negated version of the passed-in predicate.\n\t  _.negate = function(predicate) {\n\t    return function() {\n\t      return !predicate.apply(this, arguments);\n\t    };\n\t  };\n\t\n\t  // Returns a function that is the composition of a list of functions, each\n\t  // consuming the return value of the function that follows.\n\t  _.compose = function() {\n\t    var args = arguments;\n\t    var start = args.length - 1;\n\t    return function() {\n\t      var i = start;\n\t      var result = args[start].apply(this, arguments);\n\t      while (i--) result = args[i].call(this, result);\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Returns a function that will only be executed on and after the Nth call.\n\t  _.after = function(times, func) {\n\t    return function() {\n\t      if (--times < 1) {\n\t        return func.apply(this, arguments);\n\t      }\n\t    };\n\t  };\n\t\n\t  // Returns a function that will only be executed up to (but not including) the Nth call.\n\t  _.before = function(times, func) {\n\t    var memo;\n\t    return function() {\n\t      if (--times > 0) {\n\t        memo = func.apply(this, arguments);\n\t      }\n\t      if (times <= 1) func = null;\n\t      return memo;\n\t    };\n\t  };\n\t\n\t  // Returns a function that will be executed at most one time, no matter how\n\t  // often you call it. Useful for lazy initialization.\n\t  _.once = _.partial(_.before, 2);\n\t\n\t  // Object Functions\n\t  // ----------------\n\t\n\t  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n\t  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n\t  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n\t                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\t\n\t  function collectNonEnumProps(obj, keys) {\n\t    var nonEnumIdx = nonEnumerableProps.length;\n\t    var constructor = obj.constructor;\n\t    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\t\n\t    // Constructor is a special case.\n\t    var prop = 'constructor';\n\t    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\t\n\t    while (nonEnumIdx--) {\n\t      prop = nonEnumerableProps[nonEnumIdx];\n\t      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n\t        keys.push(prop);\n\t      }\n\t    }\n\t  }\n\t\n\t  // Retrieve the names of an object's own properties.\n\t  // Delegates to **ECMAScript 5**'s native `Object.keys`\n\t  _.keys = function(obj) {\n\t    if (!_.isObject(obj)) return [];\n\t    if (nativeKeys) return nativeKeys(obj);\n\t    var keys = [];\n\t    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n\t    // Ahem, IE < 9.\n\t    if (hasEnumBug) collectNonEnumProps(obj, keys);\n\t    return keys;\n\t  };\n\t\n\t  // Retrieve all the property names of an object.\n\t  _.allKeys = function(obj) {\n\t    if (!_.isObject(obj)) return [];\n\t    var keys = [];\n\t    for (var key in obj) keys.push(key);\n\t    // Ahem, IE < 9.\n\t    if (hasEnumBug) collectNonEnumProps(obj, keys);\n\t    return keys;\n\t  };\n\t\n\t  // Retrieve the values of an object's properties.\n\t  _.values = function(obj) {\n\t    var keys = _.keys(obj);\n\t    var length = keys.length;\n\t    var values = Array(length);\n\t    for (var i = 0; i < length; i++) {\n\t      values[i] = obj[keys[i]];\n\t    }\n\t    return values;\n\t  };\n\t\n\t  // Returns the results of applying the iteratee to each element of the object\n\t  // In contrast to _.map it returns an object\n\t  _.mapObject = function(obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context);\n\t    var keys =  _.keys(obj),\n\t          length = keys.length,\n\t          results = {},\n\t          currentKey;\n\t      for (var index = 0; index < length; index++) {\n\t        currentKey = keys[index];\n\t        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n\t      }\n\t      return results;\n\t  };\n\t\n\t  // Convert an object into a list of `[key, value]` pairs.\n\t  _.pairs = function(obj) {\n\t    var keys = _.keys(obj);\n\t    var length = keys.length;\n\t    var pairs = Array(length);\n\t    for (var i = 0; i < length; i++) {\n\t      pairs[i] = [keys[i], obj[keys[i]]];\n\t    }\n\t    return pairs;\n\t  };\n\t\n\t  // Invert the keys and values of an object. The values must be serializable.\n\t  _.invert = function(obj) {\n\t    var result = {};\n\t    var keys = _.keys(obj);\n\t    for (var i = 0, length = keys.length; i < length; i++) {\n\t      result[obj[keys[i]]] = keys[i];\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Return a sorted list of the function names available on the object.\n\t  // Aliased as `methods`\n\t  _.functions = _.methods = function(obj) {\n\t    var names = [];\n\t    for (var key in obj) {\n\t      if (_.isFunction(obj[key])) names.push(key);\n\t    }\n\t    return names.sort();\n\t  };\n\t\n\t  // Extend a given object with all the properties in passed-in object(s).\n\t  _.extend = createAssigner(_.allKeys);\n\t\n\t  // Assigns a given object with all the own properties in the passed-in object(s)\n\t  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n\t  _.extendOwn = _.assign = createAssigner(_.keys);\n\t\n\t  // Returns the first key on an object that passes a predicate test\n\t  _.findKey = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var keys = _.keys(obj), key;\n\t    for (var i = 0, length = keys.length; i < length; i++) {\n\t      key = keys[i];\n\t      if (predicate(obj[key], key, obj)) return key;\n\t    }\n\t  };\n\t\n\t  // Return a copy of the object only containing the whitelisted properties.\n\t  _.pick = function(object, oiteratee, context) {\n\t    var result = {}, obj = object, iteratee, keys;\n\t    if (obj == null) return result;\n\t    if (_.isFunction(oiteratee)) {\n\t      keys = _.allKeys(obj);\n\t      iteratee = optimizeCb(oiteratee, context);\n\t    } else {\n\t      keys = flatten(arguments, false, false, 1);\n\t      iteratee = function(value, key, obj) { return key in obj; };\n\t      obj = Object(obj);\n\t    }\n\t    for (var i = 0, length = keys.length; i < length; i++) {\n\t      var key = keys[i];\n\t      var value = obj[key];\n\t      if (iteratee(value, key, obj)) result[key] = value;\n\t    }\n\t    return result;\n\t  };\n\t\n\t   // Return a copy of the object without the blacklisted properties.\n\t  _.omit = function(obj, iteratee, context) {\n\t    if (_.isFunction(iteratee)) {\n\t      iteratee = _.negate(iteratee);\n\t    } else {\n\t      var keys = _.map(flatten(arguments, false, false, 1), String);\n\t      iteratee = function(value, key) {\n\t        return !_.contains(keys, key);\n\t      };\n\t    }\n\t    return _.pick(obj, iteratee, context);\n\t  };\n\t\n\t  // Fill in a given object with default properties.\n\t  _.defaults = createAssigner(_.allKeys, true);\n\t\n\t  // Creates an object that inherits from the given prototype object.\n\t  // If additional properties are provided then they will be added to the\n\t  // created object.\n\t  _.create = function(prototype, props) {\n\t    var result = baseCreate(prototype);\n\t    if (props) _.extendOwn(result, props);\n\t    return result;\n\t  };\n\t\n\t  // Create a (shallow-cloned) duplicate of an object.\n\t  _.clone = function(obj) {\n\t    if (!_.isObject(obj)) return obj;\n\t    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n\t  };\n\t\n\t  // Invokes interceptor with the obj, and then returns obj.\n\t  // The primary purpose of this method is to \"tap into\" a method chain, in\n\t  // order to perform operations on intermediate results within the chain.\n\t  _.tap = function(obj, interceptor) {\n\t    interceptor(obj);\n\t    return obj;\n\t  };\n\t\n\t  // Returns whether an object has a given set of `key:value` pairs.\n\t  _.isMatch = function(object, attrs) {\n\t    var keys = _.keys(attrs), length = keys.length;\n\t    if (object == null) return !length;\n\t    var obj = Object(object);\n\t    for (var i = 0; i < length; i++) {\n\t      var key = keys[i];\n\t      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n\t    }\n\t    return true;\n\t  };\n\t\n\t\n\t  // Internal recursive comparison function for `isEqual`.\n\t  var eq = function(a, b, aStack, bStack) {\n\t    // Identical objects are equal. `0 === -0`, but they aren't identical.\n\t    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n\t    if (a === b) return a !== 0 || 1 / a === 1 / b;\n\t    // A strict comparison is necessary because `null == undefined`.\n\t    if (a == null || b == null) return a === b;\n\t    // Unwrap any wrapped objects.\n\t    if (a instanceof _) a = a._wrapped;\n\t    if (b instanceof _) b = b._wrapped;\n\t    // Compare `[[Class]]` names.\n\t    var className = toString.call(a);\n\t    if (className !== toString.call(b)) return false;\n\t    switch (className) {\n\t      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n\t      case '[object RegExp]':\n\t      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n\t      case '[object String]':\n\t        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n\t        // equivalent to `new String(\"5\")`.\n\t        return '' + a === '' + b;\n\t      case '[object Number]':\n\t        // `NaN`s are equivalent, but non-reflexive.\n\t        // Object(NaN) is equivalent to NaN\n\t        if (+a !== +a) return +b !== +b;\n\t        // An `egal` comparison is performed for other numeric values.\n\t        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n\t      case '[object Date]':\n\t      case '[object Boolean]':\n\t        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n\t        // millisecond representations. Note that invalid dates with millisecond representations\n\t        // of `NaN` are not equivalent.\n\t        return +a === +b;\n\t    }\n\t\n\t    var areArrays = className === '[object Array]';\n\t    if (!areArrays) {\n\t      if (typeof a != 'object' || typeof b != 'object') return false;\n\t\n\t      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n\t      // from different frames are.\n\t      var aCtor = a.constructor, bCtor = b.constructor;\n\t      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n\t                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n\t                          && ('constructor' in a && 'constructor' in b)) {\n\t        return false;\n\t      }\n\t    }\n\t    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n\t    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\t\n\t    // Initializing stack of traversed objects.\n\t    // It's done here since we only need them for objects and arrays comparison.\n\t    aStack = aStack || [];\n\t    bStack = bStack || [];\n\t    var length = aStack.length;\n\t    while (length--) {\n\t      // Linear search. Performance is inversely proportional to the number of\n\t      // unique nested structures.\n\t      if (aStack[length] === a) return bStack[length] === b;\n\t    }\n\t\n\t    // Add the first object to the stack of traversed objects.\n\t    aStack.push(a);\n\t    bStack.push(b);\n\t\n\t    // Recursively compare objects and arrays.\n\t    if (areArrays) {\n\t      // Compare array lengths to determine if a deep comparison is necessary.\n\t      length = a.length;\n\t      if (length !== b.length) return false;\n\t      // Deep compare the contents, ignoring non-numeric properties.\n\t      while (length--) {\n\t        if (!eq(a[length], b[length], aStack, bStack)) return false;\n\t      }\n\t    } else {\n\t      // Deep compare objects.\n\t      var keys = _.keys(a), key;\n\t      length = keys.length;\n\t      // Ensure that both objects contain the same number of properties before comparing deep equality.\n\t      if (_.keys(b).length !== length) return false;\n\t      while (length--) {\n\t        // Deep compare each member\n\t        key = keys[length];\n\t        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n\t      }\n\t    }\n\t    // Remove the first object from the stack of traversed objects.\n\t    aStack.pop();\n\t    bStack.pop();\n\t    return true;\n\t  };\n\t\n\t  // Perform a deep comparison to check if two objects are equal.\n\t  _.isEqual = function(a, b) {\n\t    return eq(a, b);\n\t  };\n\t\n\t  // Is a given array, string, or object empty?\n\t  // An \"empty\" object has no enumerable own-properties.\n\t  _.isEmpty = function(obj) {\n\t    if (obj == null) return true;\n\t    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n\t    return _.keys(obj).length === 0;\n\t  };\n\t\n\t  // Is a given value a DOM element?\n\t  _.isElement = function(obj) {\n\t    return !!(obj && obj.nodeType === 1);\n\t  };\n\t\n\t  // Is a given value an array?\n\t  // Delegates to ECMA5's native Array.isArray\n\t  _.isArray = nativeIsArray || function(obj) {\n\t    return toString.call(obj) === '[object Array]';\n\t  };\n\t\n\t  // Is a given variable an object?\n\t  _.isObject = function(obj) {\n\t    var type = typeof obj;\n\t    return type === 'function' || type === 'object' && !!obj;\n\t  };\n\t\n\t  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n\t  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n\t    _['is' + name] = function(obj) {\n\t      return toString.call(obj) === '[object ' + name + ']';\n\t    };\n\t  });\n\t\n\t  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n\t  // there isn't any inspectable \"Arguments\" type.\n\t  if (!_.isArguments(arguments)) {\n\t    _.isArguments = function(obj) {\n\t      return _.has(obj, 'callee');\n\t    };\n\t  }\n\t\n\t  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n\t  // IE 11 (#1621), and in Safari 8 (#1929).\n\t  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n\t    _.isFunction = function(obj) {\n\t      return typeof obj == 'function' || false;\n\t    };\n\t  }\n\t\n\t  // Is a given object a finite number?\n\t  _.isFinite = function(obj) {\n\t    return isFinite(obj) && !isNaN(parseFloat(obj));\n\t  };\n\t\n\t  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n\t  _.isNaN = function(obj) {\n\t    return _.isNumber(obj) && obj !== +obj;\n\t  };\n\t\n\t  // Is a given value a boolean?\n\t  _.isBoolean = function(obj) {\n\t    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n\t  };\n\t\n\t  // Is a given value equal to null?\n\t  _.isNull = function(obj) {\n\t    return obj === null;\n\t  };\n\t\n\t  // Is a given variable undefined?\n\t  _.isUndefined = function(obj) {\n\t    return obj === void 0;\n\t  };\n\t\n\t  // Shortcut function for checking if an object has a given property directly\n\t  // on itself (in other words, not on a prototype).\n\t  _.has = function(obj, key) {\n\t    return obj != null && hasOwnProperty.call(obj, key);\n\t  };\n\t\n\t  // Utility Functions\n\t  // -----------------\n\t\n\t  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n\t  // previous owner. Returns a reference to the Underscore object.\n\t  _.noConflict = function() {\n\t    root._ = previousUnderscore;\n\t    return this;\n\t  };\n\t\n\t  // Keep the identity function around for default iteratees.\n\t  _.identity = function(value) {\n\t    return value;\n\t  };\n\t\n\t  // Predicate-generating functions. Often useful outside of Underscore.\n\t  _.constant = function(value) {\n\t    return function() {\n\t      return value;\n\t    };\n\t  };\n\t\n\t  _.noop = function(){};\n\t\n\t  _.property = property;\n\t\n\t  // Generates a function for a given object that returns a given property.\n\t  _.propertyOf = function(obj) {\n\t    return obj == null ? function(){} : function(key) {\n\t      return obj[key];\n\t    };\n\t  };\n\t\n\t  // Returns a predicate for checking whether an object has a given set of\n\t  // `key:value` pairs.\n\t  _.matcher = _.matches = function(attrs) {\n\t    attrs = _.extendOwn({}, attrs);\n\t    return function(obj) {\n\t      return _.isMatch(obj, attrs);\n\t    };\n\t  };\n\t\n\t  // Run a function **n** times.\n\t  _.times = function(n, iteratee, context) {\n\t    var accum = Array(Math.max(0, n));\n\t    iteratee = optimizeCb(iteratee, context, 1);\n\t    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n\t    return accum;\n\t  };\n\t\n\t  // Return a random integer between min and max (inclusive).\n\t  _.random = function(min, max) {\n\t    if (max == null) {\n\t      max = min;\n\t      min = 0;\n\t    }\n\t    return min + Math.floor(Math.random() * (max - min + 1));\n\t  };\n\t\n\t  // A (possibly faster) way to get the current timestamp as an integer.\n\t  _.now = Date.now || function() {\n\t    return new Date().getTime();\n\t  };\n\t\n\t   // List of HTML entities for escaping.\n\t  var escapeMap = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#x27;',\n\t    '`': '&#x60;'\n\t  };\n\t  var unescapeMap = _.invert(escapeMap);\n\t\n\t  // Functions for escaping and unescaping strings to/from HTML interpolation.\n\t  var createEscaper = function(map) {\n\t    var escaper = function(match) {\n\t      return map[match];\n\t    };\n\t    // Regexes for identifying a key that needs to be escaped\n\t    var source = '(?:' + _.keys(map).join('|') + ')';\n\t    var testRegexp = RegExp(source);\n\t    var replaceRegexp = RegExp(source, 'g');\n\t    return function(string) {\n\t      string = string == null ? '' : '' + string;\n\t      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n\t    };\n\t  };\n\t  _.escape = createEscaper(escapeMap);\n\t  _.unescape = createEscaper(unescapeMap);\n\t\n\t  // If the value of the named `property` is a function then invoke it with the\n\t  // `object` as context; otherwise, return it.\n\t  _.result = function(object, property, fallback) {\n\t    var value = object == null ? void 0 : object[property];\n\t    if (value === void 0) {\n\t      value = fallback;\n\t    }\n\t    return _.isFunction(value) ? value.call(object) : value;\n\t  };\n\t\n\t  // Generate a unique integer id (unique within the entire client session).\n\t  // Useful for temporary DOM ids.\n\t  var idCounter = 0;\n\t  _.uniqueId = function(prefix) {\n\t    var id = ++idCounter + '';\n\t    return prefix ? prefix + id : id;\n\t  };\n\t\n\t  // By default, Underscore uses ERB-style template delimiters, change the\n\t  // following template settings to use alternative delimiters.\n\t  _.templateSettings = {\n\t    evaluate    : /<%([\\s\\S]+?)%>/g,\n\t    interpolate : /<%=([\\s\\S]+?)%>/g,\n\t    escape      : /<%-([\\s\\S]+?)%>/g\n\t  };\n\t\n\t  // When customizing `templateSettings`, if you don't want to define an\n\t  // interpolation, evaluation or escaping regex, we need one that is\n\t  // guaranteed not to match.\n\t  var noMatch = /(.)^/;\n\t\n\t  // Certain characters need to be escaped so that they can be put into a\n\t  // string literal.\n\t  var escapes = {\n\t    \"'\":      \"'\",\n\t    '\\\\':     '\\\\',\n\t    '\\r':     'r',\n\t    '\\n':     'n',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\t\n\t  var escapeChar = function(match) {\n\t    return '\\\\' + escapes[match];\n\t  };\n\t\n\t  // JavaScript micro-templating, similar to John Resig's implementation.\n\t  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n\t  // and correctly escapes quotes within interpolated code.\n\t  // NB: `oldSettings` only exists for backwards compatibility.\n\t  _.template = function(text, settings, oldSettings) {\n\t    if (!settings && oldSettings) settings = oldSettings;\n\t    settings = _.defaults({}, settings, _.templateSettings);\n\t\n\t    // Combine delimiters into one regular expression via alternation.\n\t    var matcher = RegExp([\n\t      (settings.escape || noMatch).source,\n\t      (settings.interpolate || noMatch).source,\n\t      (settings.evaluate || noMatch).source\n\t    ].join('|') + '|$', 'g');\n\t\n\t    // Compile the template source, escaping string literals appropriately.\n\t    var index = 0;\n\t    var source = \"__p+='\";\n\t    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n\t      source += text.slice(index, offset).replace(escaper, escapeChar);\n\t      index = offset + match.length;\n\t\n\t      if (escape) {\n\t        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n\t      } else if (interpolate) {\n\t        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n\t      } else if (evaluate) {\n\t        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n\t      }\n\t\n\t      // Adobe VMs need the match returned to produce the correct offest.\n\t      return match;\n\t    });\n\t    source += \"';\\n\";\n\t\n\t    // If a variable is not specified, place data values in local scope.\n\t    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\t\n\t    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n\t      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n\t      source + 'return __p;\\n';\n\t\n\t    try {\n\t      var render = new Function(settings.variable || 'obj', '_', source);\n\t    } catch (e) {\n\t      e.source = source;\n\t      throw e;\n\t    }\n\t\n\t    var template = function(data) {\n\t      return render.call(this, data, _);\n\t    };\n\t\n\t    // Provide the compiled source as a convenience for precompilation.\n\t    var argument = settings.variable || 'obj';\n\t    template.source = 'function(' + argument + '){\\n' + source + '}';\n\t\n\t    return template;\n\t  };\n\t\n\t  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n\t  _.chain = function(obj) {\n\t    var instance = _(obj);\n\t    instance._chain = true;\n\t    return instance;\n\t  };\n\t\n\t  // OOP\n\t  // ---------------\n\t  // If Underscore is called as a function, it returns a wrapped object that\n\t  // can be used OO-style. This wrapper holds altered versions of all the\n\t  // underscore functions. Wrapped objects may be chained.\n\t\n\t  // Helper function to continue chaining intermediate results.\n\t  var result = function(instance, obj) {\n\t    return instance._chain ? _(obj).chain() : obj;\n\t  };\n\t\n\t  // Add your own custom functions to the Underscore object.\n\t  _.mixin = function(obj) {\n\t    _.each(_.functions(obj), function(name) {\n\t      var func = _[name] = obj[name];\n\t      _.prototype[name] = function() {\n\t        var args = [this._wrapped];\n\t        push.apply(args, arguments);\n\t        return result(this, func.apply(_, args));\n\t      };\n\t    });\n\t  };\n\t\n\t  // Add all of the Underscore functions to the wrapper object.\n\t  _.mixin(_);\n\t\n\t  // Add all mutator Array functions to the wrapper.\n\t  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n\t    var method = ArrayProto[name];\n\t    _.prototype[name] = function() {\n\t      var obj = this._wrapped;\n\t      method.apply(obj, arguments);\n\t      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n\t      return result(this, obj);\n\t    };\n\t  });\n\t\n\t  // Add all accessor Array functions to the wrapper.\n\t  _.each(['concat', 'join', 'slice'], function(name) {\n\t    var method = ArrayProto[name];\n\t    _.prototype[name] = function() {\n\t      return result(this, method.apply(this._wrapped, arguments));\n\t    };\n\t  });\n\t\n\t  // Extracts the result from a wrapped and chained object.\n\t  _.prototype.value = function() {\n\t    return this._wrapped;\n\t  };\n\t\n\t  // Provide unwrapping proxy for some methods used in engine operations\n\t  // such as arithmetic and JSON stringification.\n\t  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\t\n\t  _.prototype.toString = function() {\n\t    return '' + this._wrapped;\n\t  };\n\t\n\t  // AMD registration happens at the end for compatibility with AMD loaders\n\t  // that may not enforce next-turn semantics on modules. Even though general\n\t  // practice for AMD registration is to be anonymous, underscore registers\n\t  // as a named module because, like jQuery, it is a base library that is\n\t  // popular enough to be bundled in a third party lib, but not be part of\n\t  // an AMD load request. Those cases could generate an error when an\n\t  // anonymous define() is called outside of a loader request.\n\t  if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t}.call(this));\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** js/bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5b905673282e2c7e3259\n **/","require(\"../css/styles.scss\");\nd3 = require(\"d3\")\n_ = require(\"underscore\")\n\nvar city_average\n\n// empty array for the intervals\nvar intervals = []\n\n// cracker counter that maintains a total count of all our stuff\nvar crackerCounter = {\n        'ladi':0,\n        'chakri':0,\n        'fuljhadi':0,\n        'pulpul':0,\n        'snake':0,\n        'anar':0\n    }\n\nd3.json(\"js/data.json\",(function(error, data ) {\n  console.log(data)\n  $('#city_selector').on('change',function(){\n        var city = ($('#city_selector').val())\n        delhi_list = _.chain(data.reports)\n                    .filter(function(e){return (e.station.city == city) && \n                      (e.recent.pollutants.pm25)\n                    })\n                    .pluck('recent')\n                    .pluck('pollutants')\n                    .pluck('pm25')\n                    .pluck('concentration')\n                    .value()\n\n        city_average = Math.round(d3.sum(delhi_list)/delhi_list.length)\n        $('.current-level').html(city_average + current_exposure)\n        d3.select('.current-level-line')\n                   .transition()\n                   .duration(1000)\n                    .attr('x',xScale(city_average+current_exposure))\n                   $('.current-level').html(city_average+Math.round(current_exposure));\n        d3.select('.cal-arrow-label')\n          .transition()\n          .duration(1000)\n          .attr('style', \"left:\"+xScale(city_average+current_exposure)+\"px;\")\n        updateShareText()\n\n  })\n  delhi_list = _.chain(data.reports)\n                    .filter(function(e){return (e.station.city == \"Delhi\") && \n                      (e.recent.pollutants.pm25)\n                    })\n                    .pluck('recent')\n                    .pluck('pollutants')\n                    .pluck('pm25')\n                    .pluck('concentration')\n                    .value()\n\n  city_average = Math.round(d3.sum(delhi_list)/delhi_list.length)\n  updateShareText()\n  var current_exposure = 0\n\n  // name our categories\n  var scales = [\n     {\n         'name':'good',\n         'min':0,\n         'max': 36,\n         'color':'#76C2AC'\n     },\n     {\n        'name':'moderate',\n        'min':36.5,\n        'max':66,\n        'color': '#FAE290'\n     },\n     {\n        'name':'severe',\n        'min':105,\n        'color': '#D67E7D'\n     }\n  ]\n\n  // set the width and height of the meter\n  var windowWidth = $(window).width()\n  var bar = {width: (windowWidth<850)?(windowWidth*0.9):800, height: 30, max: 400}\n  var margin = {top: 5, bottom: 5, left: 5, right: 10}\n  // code for my scale\n  var mobile_gap = (windowWidth<600)?60:0\n  var xScale = d3.scaleLinear()\n                 .domain([0,bar.max])\n                 .range([0,bar.width])\n\n  // x axis\n  xAxis = d3.axisBottom(xScale)\n           .ticks((windowWidth<850)?(5):8);\n\n  // let's create a chart\n  var chart = d3.select('.pollution-meter')\n                .append('svg')\n                .attr('height',bar.height*2)\n                .attr('width',bar.width+margin.left+margin.right)\n                .append('g')\n                .attr('class','chart')\n                .style('fill','#ccc')\n                .attr('transform','translate('+margin.left+',0)')\n\n  // append color ranges for the base\n  chart.selectAll('.marker')\n        .data(scales)\n        .enter()\n        .append('rect')\n        .attr('class',function(d){return 'marker '+d.name})\n        .attr('height',bar.height)\n        .style('fill',function(d){return d.color})\n        .attr('width',function(d,i){\n              if (i>0){\n                 if (i==(scales.length-1)){\n                    return xScale(bar.max - scales[i-1].max)\n                 } else {\n                     return xScale(d.max - scales[i-1].max)\n                 }\n                \n              } else {\n                 return xScale(d.max)\n              }\n           })\n        .attr('transform',function(d,i){\n              if (i>0){\n                  return 'translate('+xScale(scales[i-1].max)+',0)'\n              }\n           })\n\n\n  // line for the current meter\n  chart.append('rect')\n        .attr('class','current-level-line')\n        .attr('height',bar.height)\n        .attr('width',6)\n        .attr('x',xScale(city_average+current_exposure))\n        .attr('y',0)\n        .style('fill','#fff')\n        .style('stroke-width','1.5')\n        .style('stroke','#1a1a1a')\n\n\n  // append the axis\n  chart.append(\"g\")\n     .attr('class','axis')\n     .attr(\"transform\", \"translate(0,30)\")\n     .call(xAxis);\n\n  // append the marker\n  d3.select('.cal-arrow-label')\n    .attr('style', \"left:\"+xScale(city_average+current_exposure)+\"px;\")\n\n  // update the pm meter with the level\n  $('.current-level').html(city_average+current_exposure)\n\n  // our lovely crackers\n  var cracker_data = [\n      {\n          'cracker': 'anar',\n          'pol': 4860,\n          'effect': 3,\n          'burning': 0.2\n      },\n      {\n          'cracker':'ladi',\n          'pol':38540,\n          'effect':6,\n          'burning':0.8\n      },\n      {\n          'cracker':'snake',\n          'pol':38540,\n          'effect':6,\n          'burning':0.8\n      },\n      {\n          'cracker':'pulpul',\n          'pol':28950,\n          'effect':3,\n          'burning':0.5\n      },\n      {\n          'cracker':'fuljhadi',\n          'pol':10390,\n          'effect':2,\n          'burning':0.3\n      },\n      {\n          'cracker':'chakri',\n          'pol':9490,\n          'effect':5,\n          'burning':0.2\n      }\n  ]\n\n  // what happens when you click on a cracker\n  $('.cracker-con').on('click',function(){\n    \n    // find the cracker that you just clicked on\n     var obj = _.findWhere(cracker_data,{cracker: ($(this).attr('data-which'))})\n      \n     crackerCounter[obj.cracker]++;\n\n     current_exposure = current_exposure + obj.pol;\n      \n     bar.max = current_exposure+2000;\n     \n     xScale.domain([0,bar.max ])\n\n     updateShareText(obj)\n     d3.select('.axis')\n     .transition()\n     .duration(2000)\n     .call(xAxis);\n\n     d3.selectAll('.marker')\n        .transition()\n        .duration(2000)\n        .attr('width',function(d,i){\n           if (i>0){\n              if (i==(scales.length-1)){\n                 return xScale(bar.max - scales[i-1].max)\n              } else {\n                  return xScale(d.max - scales[i-1].max)\n              }\n           } else {\n              return xScale(d.max)\n           }\n        })\n        .attr('transform',function(d,i){\n           if (i>0){\n               return 'translate('+xScale(scales[i-1].max)+',0)'\n           }\n        })\n\n      intervals[sum(crackerCounter)-1]={\n        interval: setInterval(function(){\n      \n          current_exposure = current_exposure - ( obj.pol / ( obj.effect * 60 * (10) ) )\n\n          d3.select('.current-level-line')\n               .transition()\n                .attr('x',xScale(city_average+current_exposure))\n               .duration(100)\n        \n               $('.current-level').html(city_average+Math.round(current_exposure));\n\n            $('.cal-arrow-label').css('left',xScale(city_average+current_exposure))\n\n          }, 100)\n      }\n      cleartimer(intervals[sum(crackerCounter)-1].interval,obj)\n\n     d3.select('.current-level-line')\n        .transition()\n        .duration(1500)\n        .attr('x',xScale(city_average+current_exposure))\n\n     d3.select('.cal-arrow-label')\n        .transition()\n        .duration(1500)\n        .attr('style', \"left:\"+xScale(city_average+current_exposure)+\"px;\")\n\n      var back_pos = parseInt($(this).css('background-position').split(' ')[1].split('px')[0])\n     var cracker = $(this).attr('data-which')\n     var minus = parseInt($(this).attr('data-minus'))\n     var myint = setInterval(function(){\n        back_pos = back_pos-minus\n        if (back_pos >= -(minus*5)){\n           $('.cracker-con[data-which=\"'+cracker+'\"]').addClass('playing')\n           $('.cracker-con[data-which=\"'+cracker+'\"]').css('background-position',('0 '+back_pos+'px'))\n        } else {\n           $('.cracker-con[data-which=\"'+cracker+'\"]').removeClass('playing')\n           $('.cracker-con[data-which=\"'+cracker+'\"]').css('background-position',('0 0'))\n           clearInterval(myint)\n        }\n     },500)\n\n  })\n\n  $('.cracker-con').on('mouseover',function(e){\n     var minus = parseInt($(this).attr('data-minus'))\n     $(this).css('background-position',('0 -'+minus+'px'))\n  })\n\n  $('.cracker-con').on('mouseout',function(e){\n     $(this).css('background-position',('0 0'))\n  })\n\n  // functions go here\n\n  function sum(obj) {\n    var sum = 0;\n    for( var el in obj ) {\n      if( obj.hasOwnProperty( el ) ) {\n        sum += parseFloat( obj[el] );\n      }\n    }\n    return sum;\n  }\n\n  function cleartimer(e,obj){\n    setTimeout(function(){\n        clearInterval(e)\n    },obj.effect * 60 * 1000)\n  }\n\n  $('.crackers-container').slick({\n    dots: false,\n    infinite: true,\n    speed: 300,\n    arrow: true,\n    slidesToShow: 6,\n    responsive: [\n      {\n        breakpoint: 1400,\n        settings: {\n          slidesToShow: 4,\n          slidesToScroll: 4,\n          infinite: true,\n          dots: true\n        }\n      },\n      {\n        breakpoint: 982,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3\n        }\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2\n        }\n      },\n      {\n        breakpoint: 550,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1\n        }\n      }\n    ]\n  });\n\n  function updateShareText(obj){\n    var option\n\n    if (!obj){\n      if (city_average>200){\n        option = \"The level of pollution in your city is alarming. Do you still want to burn crackers?\"\n      } else if (city_average>100){\n        option = \"The air in your city is already polluted. Do you still want to burn crackers?\"\n      } else if (city_average>60){\n        option = \"Air quality in your city is way above what is deemed safe, even before you have burnt crackers.\"\n      } else {\n        option = \"Your city might be less polluted than others but choose wisely.\"\n      }\n    } else{\n      \n      var times = Math.round((city_average+current_exposure)/(current_exposure-obj.pol)), time_text;\n\n        if (times==1){\n          time_text = ['even worse','much worse'][_.random(0,1)]\n        } else if (times == 2){\n          time_text = 'twice as bad'\n         \n        } else if (times == 3){\n          time_text = 'thrice as bad'\n        } else {\n          time_text = times + ' times worse'\n        }\n\n      var first = 'You just made the air around you ' + time_text +'.'\n\n      var second = 'You are now breathing air that is ' + time_text +'.'\n      var third = 'That '+obj.cracker+' releases dust that is '+Math.round(obj.pol/40)+' times more than the recommended level.'\n      var fourth = 'A single '+obj.cracker+' makes the air around you '+Math.round(obj.pol/city_average)+' times worse.'\n      var tweet = fourth\n      if (obj.cracker==\"snake\"){\n        option = [\"Snake tablets are atleast 300 times worse than Delhi's average air.\",\"Snake tablets are the worst. Treat them like real snakes. Run away!\",first][_.random(0, 2)];\n        tweet = [\"Snake tablets are 300 times worse than Delhi's average air.\",\"Snake tablets are the worst. Treat them like real snakes. Run away!\"][_.random(0, 1)];\n      } else if (sum(crackerCounter)==1){\n        option = fourth\n      } else if (obj.cracker==\"anar\"){\n        option = [('That pretty little flowerpot spews dust that is '+Math.round(obj.pol/40)+' times more than the recommended level.'),first,second,third,fourth][_.random(0, 4)];\n      } else if (sum(crackerCounter)>5){\n        option = ['How many crackers will you burn? You have already lighted up '+ sum(crackerCounter)+\" of them.\",first,second,third,fourth][_.random(0, 4)]\n      } else {\n        option = [first,second,third][_.random(0,2)]\n      }\n    }\n    $('.share-text').html(option+'<a href=\"http://twitter.com/intent/tweet?url=http://www.hindustantimes.com/static/diwali-crackers-pollution&amp;text='+(tweet?tweet:'How toxic are your favorite firecrackers?')+ '&amp;via=httweets\" target=\"_blank\"><i class=\"fa fa-twitter social-button\" aria-hidden=\"true\"></i></a>')\n  }\n  $('.clean-air').on('click',function(){\n    var oldexposure = current_exposure\n    \n    intervals.forEach(function(e){\n      clearInterval(e.interval)\n    })\n\n    $.each(crackerCounter, function(key, value) {\n      crackerCounter[key]=0\n    });\n\n    current_exposure=0\n\n    bar.max = current_exposure+400;\n     \n     xScale.domain([0,bar.max ])\n\n     d3.select('.axis')\n     .transition()\n     .duration(2000)\n     .call(xAxis);\n\n     d3.selectAll('.marker')\n        .transition()\n        .duration(2000)\n        .attr('width',function(d,i){\n           if (i>0){\n              if (i==(scales.length-1)){\n                 return xScale(bar.max - scales[i-1].max)\n              } else {\n                  return xScale(d.max - scales[i-1].max)\n              }\n           } else {\n              return xScale(d.max)\n           }\n        })\n        .attr('transform',function(d,i){\n           if (i>0){\n               return 'translate('+xScale(scales[i-1].max)+',0)'\n           }\n        })\n\n    $('.current-level').html(city_average)\n    d3.select('.current-level-line')\n               .transition()\n               .duration(1000)\n               .attr('x',xScale(city_average))\n               $('.current-level').html(city_average);\n    \n    d3.select('.cal-arrow-label')\n      .transition()\n      .duration(1000)\n      .attr('style', \"left:\"+xScale(city_average)+\"px;\")\n      \n      updateShareText()\n      \n  })\n\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/app.js\n ** module id = 0\n ** module chunks = 0\n **/","// https://d3js.org Version 4.2.8. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.2.8\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return range(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar pairs = function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar area = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar pi$1 = Math.PI;\nvar tau$1 = 2 * pi$1;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau$1 - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = [];\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._.push(\"Z\");\n    }\n  },\n  lineTo: function(x, y) {\n    this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._.push(\n        \"L\", this._x1 = x1, \",\", this._y1 = y1\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._.push(\n          \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n        );\n      }\n\n      this._.push(\n        \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n      );\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._.push(\n        \"M\", x0, \",\", y0\n      );\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._.push(\n        \"L\", x0, \",\", y0\n      );\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._.push(\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n        \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n      );\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau$1 + tau$1;\n      this._.push(\n        \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n      );\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n  },\n  toString: function() {\n    return this._.join(\"\");\n  }\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nvar slice$1 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$1.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) {\n    try { start(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar constant$2 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar epsilon$1 = 1e-12;\nvar pi$2 = Math.PI;\nvar halfPi$1 = pi$2 / 2;\nvar tau$2 = 2 * pi$2;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$2(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$1,\n        a1 = endAngle.apply(this, arguments) - halfPi$1,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$2 - epsilon$1) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$1) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$1) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$1) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$2) {\n          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$1) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$1) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$1 = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant$2(0),\n      y1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$1 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$1,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$2(0),\n      endAngle = constant$2(tau$2),\n      padAngle = constant$2(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$1().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$2);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$2);\n  }\n};\n\nvar cross$1 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\nvar kx = Math.sin(tau$2 / 10) * kr;\nvar ky = -Math.cos(tau$2 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$2 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross$1,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$2(circle),\n      size = constant$2(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop = function() {};\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$1) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$1) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$2 = Array.prototype.slice;\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$2([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n};\n\nvar ascending$1 = function(series) {\n  var sums = series.map(sum$1);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$1(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$1(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$1),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\nvar reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\nvar reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\nvar reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\nvar reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\nvar reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis$1(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$2 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed$1 = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear$1(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential$1(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = color$$1(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$2);\nvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar interpolateNumber = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolate(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: interpolateNumber(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolate = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? interpolateNumber\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : interpolateNumber)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar noop$1 = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set$2(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke$1() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke$1, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nvar formatSpecifier = function(specifier) {\n  return new FormatSpecifier(specifier);\n};\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n        // Perform the initial formatting.\n        value = formatType(value, precision);\n\n        // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), (48 < c && c < 58)\n                || (type === \"x\" && 96 < c && c < 103)\n                || (type === \"X\" && 64 < c && c < 71)) {\n              valueNegative = true;\n              break;\n            }\n          }\n        }\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": return valuePrefix + value + valueSuffix + padding;\n        case \"=\": return valuePrefix + padding + value + valueSuffix;\n        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$3 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$3.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$4() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$4(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$4() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$4().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$4(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant$4(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond$1 = 1000;\nvar durationMinute$1 = durationSecond$1 * 60;\nvar durationHour$1 = durationMinute$1 * 60;\nvar durationDay$1 = durationHour$1 * 24;\nvar durationWeek$1 = durationDay$1 * 7;\nvar durationMonth = durationDay$1 * 30;\nvar durationYear = durationDay$1 * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond$1],\n    [second$$1,  5,  5 * durationSecond$1],\n    [second$$1, 15, 15 * durationSecond$1],\n    [second$$1, 30, 30 * durationSecond$1],\n    [minute$$1,  1,      durationMinute$1],\n    [minute$$1,  5,  5 * durationMinute$1],\n    [minute$$1, 15, 15 * durationMinute$1],\n    [minute$$1, 30, 30 * durationMinute$1],\n    [  hour$$1,  1,      durationHour$1  ],\n    [  hour$$1,  3,  3 * durationHour$1  ],\n    [  hour$$1,  6,  6 * durationHour$1  ],\n    [  hour$$1, 12, 12 * durationHour$1  ],\n    [   day$$1,  1,      durationDay$1   ],\n    [   day$$1,  2,  2 * durationDay$1   ],\n    [  week,  1,      durationWeek$1  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point$5 = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point$5(node, event);\n};\n\nfunction none$2() {}\n\nvar selector = function(selector) {\n  return selector == null ? none$2 : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$5(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$2;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$2(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise$1() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise$1);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point$5(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point$5(node, touches[i]);\n  }\n\n  return points;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$3(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$3(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$3(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$3(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$3(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start$1(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start$1(name) ? init : set$3;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar slice$4 = Array.prototype.slice;\n\nvar identity$5 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon$2 = 1e-6;\n\nfunction translateX(scale0, scale1, d) {\n  var x = scale0(d);\n  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n}\n\nfunction translateY(scale0, scale1, d) {\n  var y = scale0(d);\n  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        transform = orient === top || orient === bottom ? translateX : translateY,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\"),\n        k = orient === top || orient === left ? -1 : 1,\n        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$4.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr > dx * dx + dy * dy;\n}\n\nfunction distance2(circle, x, y) {\n  var dx = circle.x - x,\n      dy = circle.y - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // If there are only three elements in the front-chain…\n    if ((k = a.previous) === (j = b.next)) {\n      // If the new circle intersects the third circle,\n      // rotate the front chain to try the next position.\n      if (intersects(j._, c._)) {\n        a = b, b = j, --i;\n        continue pack;\n      }\n    }\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    else {\n      sj = j._.r, sk = k._.r;\n      do {\n        if (sj <= sk) {\n          if (intersects(j._, c._)) {\n            b = j, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          j = j.next, sj += j._.r;\n        } else {\n          if (intersects(k._, c._)) {\n            a = k, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          k = k.previous, sk += k._.r;\n        }\n      } while (j !== k.next);\n    }\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle a to centroid.\n    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c._, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n    minValue = maxValue = sumValue = nodes[i0].value;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (i1 = i0 + 1; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$1 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nfunction x$1(d) {\n  return d.x + d.vx;\n}\n\nfunction y$1(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[i], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > i) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index$2(d, i) {\n  return i;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index$2,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$7(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < n; ++i) {\n      count[i] = 0;\n    }\n\n    for (i = 0; i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      ++count[link.source.index], ++count[link.target.index];\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$2(d) {\n  return d.x;\n}\n\nfunction y$2(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$7(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$3 = function(x) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$3 = function(y) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$1) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$3\n      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$3\n      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$3) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$3) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$3) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$3) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$3 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      var site = cell.site,\n          halfedges = cell.halfedges,\n          j = -1,\n          m = halfedges.length,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$10 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$6 = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nfunction transform(node) {\n  return node.__zoom || identity$6;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$6;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$1,\n      extent = defaultExtent,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n        dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n    return dx || dy ? transform.translate(dx, dy) : transform;\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$1();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$1();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$1();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$1();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$1();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$1();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p;\n      else if (!g.touch1) g.touch1 = p;\n    }\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n    }\n    if (exports.event.touches.length === n) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$1();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$1();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type$1),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type$1),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type$1(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty$1(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent$1,\n      filter = defaultFilter$2,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type$1(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type$1(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$2();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$2();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$2();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar tau$3 = pi$3 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$3 - padAngle * n) / k;\n    dx = k ? padAngle : tau$3 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius$1(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius$1,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$5.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$2,\n        sa1 = endAngle.apply(this, argv) - halfPi$2,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$2,\n        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar quarterPi = pi$4 / 4;\nvar tau$4 = pi$4 * 2;\n\nvar degrees$1 = 180 / pi$4;\nvar radians = pi$4 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log$1 = Math.log;\nvar pow$1 = Math.pow;\nvar sin$1 = Math.sin;\nvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt$1 = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$2() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(feature, stream) {\n    streamGeometry(feature.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$2;\n  },\n  sphere: function() {\n    areaSum.add(tau$4);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area$2 = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range$1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$4) phi1 = 90;\n    else if (deltaSum < -epsilon$4) phi0 = -90;\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    boundsPoint(lambda, phi);\n  }\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range$1 = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$2,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n      u = x0 * x + y0 * y + z0 * z,\n      v = m && -acos(u) / m, // area weight\n      w = atan2(m, u); // line weight\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid$1 = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n};\n\nvar constant$13 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$4;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n}\n\nvar circle$1 = function() {\n  var center = constant$13([0, 0]),\n      radius = constant$13(90),\n      precision = constant$13(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$2,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$2,\n  point: noop$2,\n  lineStart: lengthLineStart,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$2;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$2 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$2(object$1);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nvar graticule = function() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n};\n\nvar interpolate$2 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$7 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt$1(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$4);\n        break;\n      }\n    }\n  },\n  result: noop$2\n};\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$2(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$2(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$2(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$3 = function() {\n  var pointRadius = 4.5,\n      projection,\n      projectionStream,\n      context,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = (context = _) == null ? new PathString : new PathContext(_);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(null).context(null);\n};\n\nvar sum$2 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$2.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$4,\n          k = sinPhi0 * sinPhi1;\n\n      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$4, -halfPi$3]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$4\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$3;\n    stream.point(-pi$4, phi);\n    stream.point(0, phi);\n    stream.point(pi$4, phi);\n    stream.point(pi$4, 0);\n    stream.point(pi$4, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$4, -phi);\n    stream.point(-pi$4, 0);\n    stream.point(-pi$4, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$4) {\n    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$4;\n            point1[1] += epsilon$4;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt$1(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$4) < epsilon$4,\n        meridian = polar || delta < epsilon$4;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$4 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n};\n\nvar transform$1 = function(prototype) {\n  return {\n    stream: transform$2(prototype)\n  };\n};\n\nfunction transform$2(prototype) {\n  function T() {}\n  var p = T.prototype = Object.create(Transform$1.prototype);\n  for (var k in prototype) p[k] = prototype[k];\n  return function(stream) {\n    var t = new T;\n    t.stream = stream;\n    return t;\n  };\n}\n\nfunction Transform$1() {}\n\nTransform$1.prototype = {\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fit(project, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = project.clipExtent && project.clipExtent();\n\n  project\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) project.clipExtent(null);\n\n  geoStream(object, project.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) project.clipExtent(clip);\n\n  return project\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(project) {\n  return function(size, object) {\n    return fit(project, [[0, 0], size], object);\n  };\n}\n\nfunction fitExtent(project) {\n  return function(extent, object) {\n    return fit(project, extent, object);\n  };\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transform$2({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt$1(a * a + b * b + c * c),\n          phi2 = asin$1(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transform$2({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n  };\n\n  projection.fitExtent = fitExtent(projection);\n\n  projection.fitSize = fitSize(projection);\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$4 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin$1(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\n  function project(x, y) {\n    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = fitExtent(albersUsa);\n\n  albersUsa.fitSize = fitSize(albersUsa);\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt$1(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin$1(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt$1(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin$1(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$3];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$4);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      clipAuto;\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    if (!arguments.length) return clipAuto ? null : clipExtent();\n    if (clipAuto = _ == null) {\n      var k = pi$4 * scale(),\n          t = translate();\n      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n    }\n    clipExtent(_);\n    return m;\n  };\n\n  return m.clipExtent(null);\n}\n\nfunction tany(y) {\n  return tan((halfPi$3 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n      f = cy0 * pow$1(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n    var r = f / pow$1(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$4) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin$1);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$4);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$3];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.entries = entries;\nexports.keys = keys;\nexports.values = values;\nexports.map = map$1;\nexports.set = set;\nexports.nest = nest;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential;\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length$1;\nexports.path = path;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.arc = arc;\nexports.area = area$1;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross$1;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$1;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.interpolate = interpolate;\nexports.interpolateArray = array$1;\nexports.interpolateDate = date;\nexports.interpolateNumber = interpolateNumber;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.interpolateBasis = basis$2;\nexports.interpolateBasisClosed = basisClosed$1;\nexports.quantize = quantize;\nexports.dispatch = dispatch;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.formatLocale = formatLocale;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.timeFormatLocale = formatLocale$1;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.scaleBand = band;\nexports.scalePoint = point$4;\nexports.scaleIdentity = identity$4;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.scaleSequential = sequential;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.creator = creator;\nexports.customEvent = customEvent;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.transition = transition;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$3;\nexports.forceY = y$3;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomIdentity = identity$6;\nexports.zoomTransform = transform;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area$2;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid$1;\nexports.geoCircle = circle$1;\nexports.geoClipExtent = extent$1;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoDistance = distance;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoInterpolate = interpolate$2;\nexports.geoLength = length$2;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index$3;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform$1;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/build/d3.js\n ** module id = 1\n ** module chunks = 0\n **/","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/underscore/underscore.js\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}